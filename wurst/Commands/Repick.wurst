package Repick

import ModeSelection
import HeroSelection
import MyBoard
import Reset
import GeneratedValues
import Barrels
import ChatEnter

import Icons
import DamageEvent
import ClosureTimers
import LinkedList

public boolean yesOrYes = false

public interface RepickListener
    function run(player p)

let listeners = new LinkedList<RepickListener>()

/** Runs after a player succesfully enter in repick mode*/
public function onRepick(RepickListener cb)
    listeners.add(cb)

int array inCombat
boolean canRepick
DamageListener noRepick
trigger reduce = CreateTrigger()

public function enableRepick()
    canRepick = true
    if noRepick == null
        noRepick = DamageEvent.addListener(() -> begin
            if DamageEvent.getTarget().isType(UNIT_TYPE_HERO)
                inCombat[DamageEvent.getTarget().getOwner().getNumber()] = 3
        end)
    reduce.enable()

public function disableRepick()
    canRepick = false
    if noRepick != null
        destroy noRepick
        noRepick = null
    reduce.disable()

public function repick(player p)
    if canRepick or yesOrYes
        let i = p.getNumber()
        let repick = hero[i]

        if repick != null
            p.createCrate(false)
            
            if inCombat[i] > 0 and not yesOrYes
                DisplayTextToPlayer(p, 0., 0., "You cannot repick during combat")
                return
            if whatMode[5] == LEVELING
                heroModel.get(repick.getTypeId()).show()
            hero[i] = null
            gameBoard.setItemIcon(row[i], 0, Icons.bTNSelectHeroOn)
            if THE_DRAENEI.has(p)
                repick.getItemOfId(BARREL).remove()
                repick.setPos(Rects.selectorDraenei.getCenter())
            else
                repick.setPos(Rects.selectorDemon.getCenter())
            p.panCamToTimed(repick, 0.)
            
            canPick.add(p)
            repick.remove()

            for cb in listeners
                cb.run(p)

init
    onChatCommand("repick", (p, _) -> repick(p))

    onModesSelected(() -> begin
        enableRepick()
        if whatMode[5] == LEVELING
            doAfter(20, () -> begin
                print("\nYou can only repick until 2 minutes.")
                bj_questHintSound.play()

                doAfter(120, () -> begin
                    print("\n|cffff0000You cannot longer repick.|r")
                    disableRepick()
                end)
            end)
    end)

    onReset(false, () -> begin
        for i = 1 to 10
            inCombat[i] = 0
    end)

    // No during combat
    reduce
        ..registerTimerEvent(1, true)
        .addAction(() -> begin
            for i = 1 to 10
                inCombat[i]--
        end)
