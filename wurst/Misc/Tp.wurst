package Tp

import Functions
import PseudoWindWalk
import Missions
import PlayerData
import GeneratedValues

import EventHelper

let receiverPoint = Rects.entranceReceiver.getCenter()

let cond = Condition(() -> begin
    return not GetEnteringUnit().isType(UNIT_TYPE_FLYING) and not GetEnteringUnit().isNotCollidable()
end)

class Tp
    unit portal
    vec2 target
    texttag textTag
    string effEnterUnit
    string effEnterPortal

    construct(unit portal, vec2 target, string name, string effPortal, string effEnterUnit, string effEnterPortal, rect zone, code actions)
        this.portal = portal
        this.target = target
        this.effEnterUnit = effEnterUnit
        this.effEnterPortal = effEnterPortal

        addEffect(effPortal, portal.getPos())

        textTag = CreateTextTag()
            ..setText(name, 10)
            ..setColor(COLOR_WHITE)
            ..setVisibility(true)
        SetTextTagPosUnit(textTag, portal, 0)

        CreateTrigger()
            ..registerRectEnterEventSource(zone)
            ..addCondition(cond)
            ..addAction(actions)
        
        doPeriodically(0.03125, cb -> begin
            textTag.setVisibility(IsUnitVisible(portal, localPlayer) and not inCinematic)
        end)
    
    function move(unit enter)
        enter.flashEffect(effEnterUnit, "origin")
        portal.flashEffect(effEnterPortal, "origin")
        enter.setPos(target)

Tp dungeon
Tp pavilion
Tp construction
Tp habitat
Tp back1
Tp back2
Tp back3
Tp back4

init
    dungeon = new Tp(GUnits.tpEntranceToDungeon, Rects.dungeonReceiver.getCenter(), "Dungeon",
        "Models\\Void Teleport Teal To.mdl",
        "Models\\Void Teleport Teal Target.mdl",
        "Models\\Void Teleport Teal Caster.mdl",
        Rects.tpEntranceToDungeon, () -> dungeon.move(GetEnteringUnit()))
    construction = new Tp(GUnits.tpEntranceToConstruction, Rects.constructionReceiver.getCenter(), "Construction",
        "Models\\Void Teleport Red To.mdl",
        "Models\\Void Teleport Red Target.mdl",
        "Models\\Void Teleport Red Caster.mdl",
        Rects.tpEntranceToConstruction, () -> construction.move(GetEnteringUnit()))
    pavilion = new Tp(GUnits.tpEntranceToPavilion, Rects.pavilionReceiver.getCenter(), "Pavilion",
        "Models\\Void Teleport Blue To.mdl",
        "Models\\Void Teleport Blue Target.mdl",
        "Models\\Void Teleport Blue Caster.mdl",
        Rects.tpEntranceToPavilion, () -> pavilion.move(GetEnteringUnit()))
    habitat = new Tp(GUnits.tpEntranceToHabitat, Rects.habitatReceiver.getCenter(), "habitat",
        "Models\\Void Teleport Orange To.mdl",
        "Models\\Void Teleport Orange Target.mdl",
        "Models\\Void Teleport Orange Caster.mdl",
        Rects.tpEntranceToHabitat, () -> habitat.move(GetEnteringUnit()))
    back1 = new Tp(GUnits.tpDungeonToEntrance, receiverPoint, "Entrance",
        "Models\\Void Teleport Teal To.mdl",
        "Models\\Void Teleport Teal Target.mdl",
        "Models\\Void Teleport Teal Caster.mdl",
        Rects.tpDungeonToEntrance, () -> begin
            if actMission < 4 and THE_DRAENEI.has(GetEnteringUnit().getOwner())
                DisplayTextToPlayer(GetEnteringUnit().getOwner(), 0., 0., "You are not authorized to use this teleporter.")
            else
                back1.move(GetEnteringUnit())
        end)
    back2 = new Tp(GUnits.tpPavilionToEntrance, receiverPoint, "Entrance",
        "Models\\Void Teleport Blue To.mdl",
        "Models\\Void Teleport Blue Target.mdl",
        "Models\\Void Teleport Blue Caster.mdl",
        Rects.tpPavilionToEntrance, () -> begin
            if actMission < 4 and THE_DRAENEI.has(GetEnteringUnit().getOwner())
                DisplayTextToPlayer(GetEnteringUnit().getOwner(), 0., 0., "You are not authorized to use this teleporter.")
            else
                back2.move(GetEnteringUnit())
        end)
    back3 = new Tp(GUnits.tpConstructionToEntrance, receiverPoint, "Entrance",
        "Models\\Void Teleport Red To.mdl",
        "Models\\Void Teleport Red Target.mdl",
        "Models\\Void Teleport Red Caster.mdl",
        Rects.tpConstructionToEntrance, () -> begin
            if actMission < 4 and THE_DRAENEI.has(GetEnteringUnit().getOwner())
                DisplayTextToPlayer(GetEnteringUnit().getOwner(), 0., 0., "You are not authorized to use this teleporter.")
            else
                back3.move(GetEnteringUnit())
        end)
    back4 = new Tp(GUnits.tpHabitatToEntrance, receiverPoint, "Entrance",
        "Models\\Void Teleport Orange To.mdl",
        "Models\\Void Teleport Orange Target.mdl",
        "Models\\Void Teleport Orange Caster.mdl",
        Rects.tpHabitatToEntrance, () -> back4.move(GetEnteringUnit()))