package SecretPassages

import GeneratedValues
import Functions
import Reset

import EventHelper
import ClosureTimers

let offset = vec2(0, 256.)
let enter1Receiver = Rects.secretPassage1.getCenter() - offset
let enter2Receiver = Rects.secretPassage2.getCenter() - offset
let enter4Receiver = Rects.secretPassage4.getCenter() - offset

function secretPassage(unit u, vec2 pos)
    let p = u.getOwner()
    let b = u.isSelected(p)
    u.hide()
    u.pause()
    u.setPos(pos)
    p.panCamToTimed(u, 1.)

    doAfter(1.) ->
        u.show()
        u.unpause()
        if b
            p.selectSingle(u)

var doorIsOpen = false

init
    // Construction passage

    CreateTrigger()
        ..registerRectEnterEventSource(Rects.secretPassage1)
        ..addCondition(notFlying)
        ..addAction(() -> begin
            if doorIsOpen
                secretPassage(GetEnteringUnit(), enter2Receiver)
        end)
    
    CreateTrigger()
        ..registerRectEnterEventSource(Rects.secretPassage2)
        ..addCondition(notFlying)
        ..addAction(() -> begin
            if doorIsOpen
                secretPassage(GetEnteringUnit(), enter1Receiver)
        end)
    
    Dests.doorToSecretPassage.killable.setInvulnerable(true)
    CreateTrigger()
        ..registerDeathEvent(Dests.leverToTheExplosives)
        ..addAction(() -> begin
            doorIsOpen = not doorIsOpen
            Dests.doorToSecretPassage.setOpen(doorIsOpen)
            QuestMessageBJ(bj_FORCE_ALL_PLAYERS, bj_QUESTMESSAGE_HINT, "The secret passage in the construction zone is " + (doorIsOpen ? "open" : "close"))
            doAfter(0.01) ->
                Dests.leverToTheExplosives.restoreLife(300, true)
        end)
    
    onReset(false, () -> begin
        doorIsOpen = false
        Dests.doorToSecretPassage.close()
        Dests.leverToTheExplosives.restoreLife(300, true)
    end)
    
    // Big rock passage
    CreateTrigger()
        ..registerRectEnterEventSource(Rects.secretPassage3)
        ..addCondition(notFlying)
        ..addAction(() -> secretPassage(GetEnteringUnit(), enter4Receiver))
    
    CreateTrigger()
        ..registerRectEnterEventSource(Rects.secretPassage4)
        ..addCondition(notFlying)
        ..addAction(() -> DisplayTextToPlayer(GetEnteringUnit().getOwner(), 0, 0, "You can't return there"))