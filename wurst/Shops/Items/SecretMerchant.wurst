package SecretMerchant

import Merchant
import SpecialMerchant
import ArmsMerchant
import RecipesMerchant
import ItemCreation
import Functions

import ClosureEvents

public constant STONE_GOLEM = compiletime(
    new ItemDefinition(ITEM_ID_GEN.next(), 'fgrg')
        ..setGoldCost(0)
        ..setLumberCost(3)
        ..setStockMaximum(2)
        ..setButtonPositionX(0)
        ..setButtonPositionY(0)
        ..setStockReplenishInterval(180)
        ..setHotkey("Q")
        ..setTooltipBasic("[|cffffcc00Q|r] Buy Stone Golem")
        ..setTooltipExtended("Summons a Stone Golem to fight for you. |nLasts 180 seconds.")
        ..setDescription("Summons a Stone Golem to fight for you.")
        ..setName("Stone Golem"))

public constant CROWN_OF_KINGS = compiletime(
    new RecipeItem('rde3')
        ..setGoldCost(2000)
        ..setLumberCost(5)
        ..setButtonPositionX(1)
        ..setButtonPositionY(0)
        ..setStockReplenishInterval(60)
        ..setInterfaceIcon(Icons.bTNHelmutPurple)
        ..setHotkey("W")
        ..setTooltipBasic("[|cffffcc00W|r] Buy Crown of kings")
        ..setTooltipExtended("+15 armor.|n+100 hit points.|n+3 life regeneration.")
        ..setDescription("+15 armor.|n+100 hit points.|n+3 life regeneration.")
        ..setName("Crown of kings"))
        ..addBonus(Bonus.ARMOR, 15)
        ..addBonus(Bonus.LIFE, 100)
        ..addBonus(Bonus.LIFEREGEN, 3)

public constant HORN_OF_THE_LEGION = compiletime(
    new RecipeItem('glsk')
        ..setGoldCost(600)
        ..setLumberCost(6)
        ..setButtonPositionX(2)
        ..setButtonPositionY(0)
        ..setStockMaximum(1)
        ..setStockReplenishInterval(360)
        ..setActivelyUsed(true)
        ..setInterfaceIcon(Icons.bTNHornOfDoom)
        ..setHotkey("E")
        ..setTooltipBasic("[|cffffcc00E|r] Buy Horn of the Legion")
        ..setTooltipExtended("An artifact with great power, people when listening to it are paralyzed when they hear it.\n\nParalyzes units in a range of 1000 to hero (except him and units with magin inmunity) while the horn sounds, but slows movement speed by 25%.\nLasts 7 seconds.")
        ..setDescription("An artifact with great power, people when listening to it are paralyzed when they hear it.")
        ..setName("Horn of the Legion"))

// War Helmet

public constant WAR_HELMET_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(1000)
        ..setLumberCost(0)
        ..setStockReplenishInterval(10)
        ..setInterfaceIcon(Imports.bTNNFHelmet03)
        ..setButtonPositionX(3)
        ..setButtonPositionY(0)
        ..setHotkey("R")
        ..setTooltipBasic("[|cffffcc00R|r] Buy War Helmet (Recipe)")
        ..setTooltipExtended("+15 armor\n+150 hit points\n+5 life regeneration\n" + FAKE_BERSERK_TOOLTIP + "\n\n" +
                             "Requires:\n" +
                             "- Crown of kings\n\n")
        ..setDescription("+15 armor\n+150 hit points\n+5 life regeneration\nBerserk")
        ..setName("Recipe of War Helmet"))

public constant WAR_HELMET = compiletime(
    new RecipeItem('modt')
        //..setArmorType(ArmorSoundType.Metal)
        ..setClassification("Miscellaneous")
        ..setActivelyUsed(true)
        ..setInterfaceIcon(Imports.bTNNFHelmet03)
        ..setAbilities(FAKE_BERSERK_SPELL.toRawCode())
        ..setTooltipExtended("+15 armor\n+150 hit points\n+5 life regeneration\n" + FAKE_BERSERK_TOOLTIP)
        ..setDescription("+15 armor\n+150 hit points\n+5 life regeneration\nBerserk")
        ..setName("War Helmet"))
        ..addBonus(Bonus.ARMOR, 15)
        ..addBonus(Bonus.LIFE, 100)
        ..addBonus(Bonus.LIFEREGEN, 3)

@compiletime function genWarHelmet()
    fixRecipe(WAR_HELMET_RECIPE, WAR_HELMET,
        
        CROWN_OF_KINGS.goldCost +
        WAR_HELMET_RECIPE.goldCost,

        CROWN_OF_KINGS.lumberCost +
        WAR_HELMET_RECIPE.lumberCost
    )

init
    new ItemRecipe()
        ..setRequiredItems(
            CROWN_OF_KINGS,
            WAR_HELMET_RECIPE)
        ..setResultItem(WAR_HELMET)

    WAR_HELMET_RECIPE.initShopConditions()

// Staff of the Cyclones

public constant STAFF_OF_THE_CYCLONES_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(200)
        ..setLumberCost(4)
        ..setStockReplenishInterval(10)
        ..setInterfaceIcon(Icons.bTNPriestAdept)
        ..setButtonPositionX(0)
        ..setButtonPositionY(1)
        ..setHotkey("A")
        ..setTooltipBasic("[|cffffcc00A|r] Buy Staff of the Cyclones (Recipe)")
        ..setTooltipExtended("+20 move speed, +1.5 mana regeneration\n" + STAFF_OF_THE_CYCLONES_TOOLTIP + "\n\n" +
                             "Requires:\n" +
                             "- Wind scepter\n" +
                             "- Scroll of speed\n" +
                             "- Sobi mask\n\n")
        ..setDescription("+20 move speed, +1.5 mana regeneration\n" + STAFF_OF_THE_CYCLONES_TOOLTIP)
        ..setName("Recipe of Staff of the Cyclones"))

public constant STAFF_OF_THE_CYCLONES = compiletime(
    new RecipeItem('wcyc')
        //..setArmorType(ArmorSoundType.Metal)
        ..setClassification("Artifact")
        ..setNumberofCharges(0)
        ..setAbilities(commaList(STAFF_OF_THE_CYCLONES_SPELL))
        ..setActivelyUsed(true)
        ..setInterfaceIcon(Icons.bTNPriestAdept)
        ..setTooltipExtended("+20 move speed, +1.5 mana regeneration\n" + STAFF_OF_THE_CYCLONES_TOOLTIP)
        ..setDescription("+20 move speed, +1.5 mana regeneration\n" + STAFF_OF_THE_CYCLONES_TOOLTIP)
        ..setName("Staff of the Cyclones"))
        ..addBonus(Bonus.MANAREGEN, 1.5)

@compiletime function genStaffOfTheCyclones()
    fixRecipe(STAFF_OF_THE_CYCLONES_RECIPE, STAFF_OF_THE_CYCLONES,
        
        WIND_SCEPTER.goldCost +
        SCROLL_OF_SPEED.goldCost +
        SOBI_MASK_1.goldCost +
        STAFF_OF_THE_CYCLONES_RECIPE.goldCost,
        
        WIND_SCEPTER.lumberCost +
        SCROLL_OF_SPEED.lumberCost +
        SOBI_MASK_1.lumberCost +
        STAFF_OF_THE_CYCLONES_RECIPE.lumberCost
    )

init
    new ItemRecipe()
        ..setRequiredItems(
            WIND_SCEPTER,
            SCROLL_OF_SPEED,
            SOBI_MASK_1,
            STAFF_OF_THE_CYCLONES_RECIPE)
        ..setResultItem(STAFF_OF_THE_CYCLONES)

    new ItemRecipe()
        ..setRequiredItems(
            WIND_SCEPTER,
            SCROLL_OF_SPEED,
            SOBI_MASK_2,
            STAFF_OF_THE_CYCLONES_RECIPE)
        ..setResultItem(STAFF_OF_THE_CYCLONES)

    STAFF_OF_THE_CYCLONES_RECIPE.initShopConditions()

// Acid Stone

public constant ACID_STONE = compiletime(
    new RecipeItem('glsk')
        ..setGoldCost(700)
        ..setLumberCost(7)
        ..setAbilities(commaList(DUMMY_ABILITY, ACID_STONE_SPELL))
        ..setButtonPositionX(1)
        ..setButtonPositionY(1)
        ..setStockMaximum(1)
        ..setStockReplenishInterval(360)
        ..setActivelyUsed(true)
        ..setInterfaceIcon(Icons.bTNHealthStone)
        ..setHotkey("S")
        ..setTooltipBasic("[|cffffcc00S|r] Buy Acid Stone")
        ..setTooltipExtended(ACID_STONE_TOOLTIP + "\n\n|cffc3dbffPress to deactivate it|r")
        ..setDescription(ACID_STONE_TOOLTIP)
        ..setName("Acid Stone (|cff32cd32Enabled|r)"))

public constant ACID_STONE_DISABLED = compiletime(
    new RecipeItem('glsk')
        ..setGoldCost(700)
        ..setLumberCost(7)
        ..setAbilities(DUMMY_ABILITY.toRawCode())
        ..setActivelyUsed(true)
        ..setInterfaceIcon(Icons.bTNManaStone)
        ..setTooltipExtended(ACID_STONE_TOOLTIP + "\n\n|cffc3dbffPress to activate it|r")
        ..setDescription(ACID_STONE_TOOLTIP)
        ..setName("Acid Stone (|cffff0000Disabled|r)"))

init
    EventListener.add(EVENT_PLAYER_UNIT_USE_ITEM, () -> begin
        let m = EventData.getManipulatedItem()
        let typ = m.getTypeId()
        var newId = 0

        if typ == ACID_STONE.getNewId()
            newId = ACID_STONE_DISABLED.getNewId()
        else if typ == ACID_STONE_DISABLED.getNewId()
            newId = ACID_STONE.getNewId()
        
        if newId != 0
            let u = EventData.getManipulatingUnit()
            let slot = u.getItemSlot(m)
            m.remove()
            u.addItemToSlot(newId, slot)
    end)

// -- --

public constant CLOACK_OF_FLAMES = compiletime(
    new RecipeItem('clfm')
        ..setGoldCost(600)
        ..setLumberCost(2)
        ..setAbilities(IMMOLATION_20_SPELL.toRawCode())
        ..setButtonPositionX(2)
        ..setButtonPositionY(1)
        ..setStockMaximum(1)
        ..setStockReplenishInterval(10)
        ..setInterfaceIcon(Icons.bTNCloakOfFlames)
        ..setHotkey("D")
        ..setTooltipBasic("[|cffffcc00D|r] Buy Cloak of Flames")
        ..setTooltipExtended(IMMOLATION_20_TOOLTIP)
        ..setDescription(IMMOLATION_20_TOOLTIP)
        ..setName("Cloak of Flames"))

// Trap totem

public constant TRAP_TOTEM_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(0)
        ..setLumberCost(1)
        ..setStockReplenishInterval(30)
        ..setInterfaceIcon(Icons.bTNStasisTrap)
        ..setButtonPositionX(3)
        ..setButtonPositionY(1)
        ..setHotkey("F")
        ..setTooltipBasic("[|cffffcc00F|r] Buy Trap Totem (Recipe)")
        ..setTooltipExtended("Summons an Invisible, Immovable Totem that stuns units around it. The trap activates when a ground enemy approaches and destroys all other electrical totems in the same area of effect.\nThe trap lasts 150 seconds.\nThe stun lasts 3 seconds." +
                             "Requires:\n" +
                             "- Sentinel Totems\n" +
                             "- Scroll of the beast\n\n")
        ..setDescription("Summons an Invisible, Immovable Totem that stuns units around it.")
        ..setName("Recipe of Trap Totem"))

public constant TRAP_TOTEM = compiletime(
    new RecipeItem('wswd')
        //..setArmorType(ArmorSoundType.Wood)
        ..setClassification("Charged")
        ..setInterfaceIcon(Icons.bTNStasisTrap)
        ..setTooltipExtended("Summons an Invisible, Immovable Totem that stuns units around it. The trap activates when a ground enemy approaches and destroys all other electrical totems in the same area of effect.\nThe trap lasts 150 seconds.\nThe stun lasts 3 seconds.")
        ..setDescription("Summons an Invisible, Immovable Totem that stuns units around it.")
        ..setName("Trap Totem"))

@compiletime function genTrapTotem()
    fixRecipe(TRAP_TOTEM_RECIPE, TRAP_TOTEM,
        
        SENTINEL_TOTEMS.goldCost +
        SCROLL_OF_THE_BEAST.goldCost +
        TRAP_TOTEM_RECIPE.goldCost,
        
        SENTINEL_TOTEMS.lumberCost +
        SCROLL_OF_THE_BEAST.lumberCost +
        TRAP_TOTEM_RECIPE.lumberCost)

init
    new ItemRecipe()
        ..setRequiredItems(
            SENTINEL_TOTEMS,
            SCROLL_OF_THE_BEAST,
            TRAP_TOTEM_RECIPE)
        ..setResultItem(TRAP_TOTEM)

    TRAP_TOTEM_RECIPE.initShopConditions()

// Power Boots

public constant POWER_BOOTS_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(50)
        ..setLumberCost(1)
        ..setStockReplenishInterval(30)
        ..setInterfaceIcon(Icons.bTNBoots)
        ..setButtonPositionX(0)
        ..setButtonPositionY(2)
        ..setHotkey("Z")
        ..setTooltipBasic("[|cffffcc00Z|r] Buy Power Boots (Recipe)")
        ..setTooltipExtended("+55 Movement Speed\n+25% Speed Attack\n+14 Damage" +
                             "Requires:\n" +
                             "- Boots of Speed\n" +
                             "- Gloves of Haste\n" +
                             "- Claws of Attack (+12)\n\n")
        ..setDescription("+55 Movement Speed\n+25% Speed Attack\n+14 Damage")
        ..setName("Recipe of Power Boots"))

init
    IMPULSE_BOOTS.getNewId().addMoveSpeed(55)

public constant POWER_BOOTS = compiletime(
    new RecipeItem('belv')
        //..setArmorType(ArmorSoundType.Wood)
        ..setClassification("Permanent")
        ..setInterfaceIcon(Icons.bTNBoots)
        ..addBonus(Bonus.ATTACKSPEED, 25)
        ..addBonus(Bonus.DAMAGE, 14)
        ..setTooltipExtended("+55 Movement Speed\n+25% Speed Attack\n+14 Damage")
        ..setDescription("+55 Movement Speed\n+25% Speed Attack\n+14 Damage")
        ..setName("Power Boots"))

@compiletime function genPowerBoots()
    fixRecipe(POWER_BOOTS_RECIPE, POWER_BOOTS,
        
        BOOTS_OF_SPEED.goldCost +
        GLOVES_OF_HASTE.goldCost +
        CLAWS_OF_ATTACK_12.goldCost +
        POWER_BOOTS_RECIPE.goldCost,
        
        BOOTS_OF_SPEED.lumberCost +
        GLOVES_OF_HASTE.lumberCost +
        CLAWS_OF_ATTACK_12.lumberCost +
        POWER_BOOTS_RECIPE.lumberCost)

init
    new ItemRecipe()
        ..setRequiredItems(
            BOOTS_OF_SPEED,
            GLOVES_OF_HASTE,
            CLAWS_OF_ATTACK_12,
            POWER_BOOTS_RECIPE)
        ..setResultItem(POWER_BOOTS)

    POWER_BOOTS_RECIPE.initShopConditions()

// Fire Blade

public constant FIRE_BLADE_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(300)
        ..setLumberCost(5)
        ..setStockReplenishInterval(10)
        ..setInterfaceIcon(Icons.bTNArcaniteMelee)
        ..setButtonPositionX(3)
        ..setButtonPositionY(0)
        ..setHotkey("X")
        ..setTooltipBasic("[|cffffcc00X|r] Buy Fire Blade (Recipe)")
        ..setTooltipExtended("+70 damage and 20% of chance of causing 2 times normal damage.\n\n" +
                             "Requires:\n" +
                             "- Claws of attack (+12)\n" +
                             "- Claws of attack (+15)\n" +
                             "- Claws of attack (+18)\n" +
                             "- Claws of attack (+21)\n\n")
        ..setDescription("+70 damage and 20% of chance of causing 2 times normal damage.")
        ..setName("Recipe of Fire Blade"))

public constant FIRE_BLADE = compiletime(
    new RecipeItem('srbd')
        ..setAbilities(CRITICAL_STRIKE_SPELL.toRawCode())
        //..setArmorType(ArmorSoundType.Metal)
        ..setClassification("Miscellaneous")
        ..setInterfaceIcon(Icons.bTNArcaniteMelee)
        ..setTooltipExtended("+70 damage\n" + CRITICAL_STRIKE_TOOLTIP)
        ..setDescription("+70 damage\n" + CRITICAL_STRIKE_TOOLTIP)
        ..setName("Fire Blade"))
        ..addBonus(Bonus.DAMAGE, 70)

@compiletime function genFireBlade()
    fixRecipe(FIRE_BLADE_RECIPE, FIRE_BLADE,
        
        CLAWS_OF_ATTACK_12.goldCost +
        CLAWS_OF_ATTACK_15.goldCost +
        CLAWS_OF_ATTACK_18.goldCost +
        CLAWS_OF_ATTACK_21.goldCost +
        FIRE_BLADE_RECIPE.goldCost,
        
        CLAWS_OF_ATTACK_12.lumberCost +
        CLAWS_OF_ATTACK_15.lumberCost +
        CLAWS_OF_ATTACK_18.lumberCost +
        CLAWS_OF_ATTACK_21.lumberCost +
        FIRE_BLADE_RECIPE.lumberCost)

init
    new ItemRecipe()
        ..setRequiredItems(
            CLAWS_OF_ATTACK_12,
            CLAWS_OF_ATTACK_15,
            CLAWS_OF_ATTACK_18,
            CLAWS_OF_ATTACK_21,
            FIRE_BLADE_RECIPE)
        ..setResultItem(FIRE_BLADE)

    FIRE_BLADE_RECIPE.initShopConditions()

// Staff of silence

public constant STAFF_OF_SILENCE_RECIPE = compiletime(
    new Recipe()
        ..setGoldCost(400)
        ..setLumberCost(2)
        ..setStockReplenishInterval(30)
        ..setInterfaceIcon(Icons.bTNStaffOfSilence)
        ..setButtonPositionX(2)
        ..setButtonPositionY(2)
        ..setHotkey("C")
        ..setTooltipBasic("[|cffffcc00C|r] Buy Staff of Silence (Recipe)")
        ..setTooltipExtended("+20 damage\n+20% attack speed\n" + SILENCE_TOOLTIP + "\n\n" +
                             "Requires:\n" +
                             "- Claws of attack (+18)\n" +
                             "- Gloves of Haste\n" +
                             "- Staff of negation\n\n")
        ..setDescription("+20 damage\n+20% attack speed\n" + SILENCE_TOOLTIP)
        ..setName("Recipe of Staff of Silence"))

public constant STAFF_OF_SILENCE = compiletime(
    new RecipeItem('ssil')
        //..setArmorType(ArmorSoundType.Wood)
        ..setClassification("Permanent")
        ..setInterfaceIcon(Icons.bTNStaffOfSilence)
        ..addBonus(Bonus.ATTACKSPEED, 20)
        ..addBonus(Bonus.DAMAGE, 20)
        ..setAbilities(SILENCE_SPELL.toRawCode())
        ..setActivelyUsed(true)
        ..setTooltipExtended("+20 damage\n+20% attack speed\n" + SILENCE_TOOLTIP)
        ..setDescription("+20 damage\n+20% attack speed\n" + SILENCE_TOOLTIP)
        ..setName("Staff of Silence"))

@compiletime function genStaffOfSilence()
    fixRecipe(STAFF_OF_SILENCE_RECIPE, STAFF_OF_SILENCE,
        
        CLAWS_OF_ATTACK_15.goldCost +
        GLOVES_OF_HASTE.goldCost +
        STAFF_OF_NEGATION.goldCost +
        STAFF_OF_SILENCE_RECIPE.goldCost,
        
        CLAWS_OF_ATTACK_15.lumberCost +
        GLOVES_OF_HASTE.lumberCost +
        STAFF_OF_NEGATION.lumberCost +
        STAFF_OF_SILENCE_RECIPE.lumberCost)

init
    new ItemRecipe()
        ..setRequiredItems(
            BOOTS_OF_SPEED,
            GLOVES_OF_HASTE,
            CLAWS_OF_ATTACK_12,
            STAFF_OF_SILENCE_RECIPE)
        ..setResultItem(STAFF_OF_SILENCE)

    STAFF_OF_SILENCE_RECIPE.initShopConditions()

// -- --

public constant SHIELD_RUNE = compiletime(
    new ItemDefinition(ITEM_ID_GEN.next(), 'rsps')
        ..setGoldCost(300)
        ..setLumberCost(1)
        ..setStockMaximum(1)
        ..setButtonPositionX(3)
        ..setButtonPositionY(2)
        ..setStockReplenishInterval(120)
        ..setInterfaceIcon(Icons.bTNSpellShieldAmulet)
        ..setHotkey("V")
        ..setTooltipBasic("[|cffffcc00V|r] Buy Shield Rune")
        ..setTooltipExtended("Gives nearby units a shield that blocks a negative spell.")
        ..setDescription("Gives nearby units a shield that blocks a negative spell.")
        ..setName("Shield Rune"))