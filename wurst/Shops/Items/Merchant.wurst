package Merchant

import ItemCreation

// The order is in how they will be displayed in game

public constant HEALING_POTION = compiletime(
    new RecipeItem('phea')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(125)
        ..setStockReplenishInterval(30)
        ..setStockMaximum(5)
        ..setStockStartDelay(0)
        ..setButtonPositionX(0)
        ..setButtonPositionY(0)
        ..setHotkey("Q")
        ..setName("Healing Potion")
        ..generateTooltip("Heals 250 hit points.")
        ..setTooltipBasic("[|cffffcc00Q|r] Buy Healing Potion"))
        ..register()

public constant HEALING_SALVE = compiletime(
    new RecipeItem('hslv')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(100)
        ..setAbilities(HEALING_SALVE_SPELL.toRawCode())
        ..setStockReplenishInterval(30)
        ..setNumberofCharges(1)
        ..setStockMaximum(5)
        ..setStockStartDelay(0)
        ..setButtonPositionX(0)
        ..setButtonPositionY(0)
        ..setHotkey("Q")
        ..setName("Healing Salve")
        ..generateTooltip(HEALING_SALVE_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00Q|r] Buy Healing Salve"))
        ..register()

public constant MANA_POTION = compiletime(
    new RecipeItem('pman')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(125)
        ..setStockReplenishInterval(30)
        ..setStockMaximum(5)
        ..setStockStartDelay(0)
        ..setButtonPositionX(1)
        ..setButtonPositionY(0)
        ..setHotkey("W")
        ..setName("Mana Potion")
        ..generateTooltip("Restores 150 mana when used.")
        ..setTooltipBasic("[|cffffcc00W|r] Buy Mana Potion"))
        ..register()

public constant CLARITY_POTION = compiletime(
    new RecipeItem('plcl')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(70)
        ..setAbilities(CLARITY_POTION_SPELL.toRawCode())
        ..setStockReplenishInterval(30)
        ..setStockMaximum(5)
        ..setStockStartDelay(0)
        ..setButtonPositionX(1)
        ..setButtonPositionY(0)
        ..setHotkey("W")
        ..setName("Clarity Potion")
        ..generateTooltip(CLARITY_POTION_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00W|r] Buy Clarity Potion"))
        ..register()

public constant SCROLL_OF_THE_BEAST = compiletime(
    new RecipeItem('sror')
        //..setArmorType(ArmorSoundType.Ethereal)
        ..setClassification("Charged")
        ..setGoldCost(150)
        ..setAbilities(ROAR_SPELL.toRawCode())
        ..setStockReplenishInterval(30)
        ..setStockStartDelay(0)
        ..setButtonPositionX(2)
        ..setButtonPositionY(0)
        ..setHotkey("E")
        ..setName("Scroll of the beast")
        ..generateTooltip(ROAR_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00E|r] Buy Scroll of the beast"))
        ..register()

public constant WIND_SCEPTER = compiletime(
    new RecipeItem('wcyc')
        //..setArmorType(ArmorSoundType.Wood)
        ..setClassification("Charged")
        ..setGoldCost(125)
        ..setStockReplenishInterval(30)
        ..setNumberofCharges(2)
        ..setStockStartDelay(0)
        ..setButtonPositionX(3)
        ..setButtonPositionY(0)
        ..setHotkey("R")
        ..setName("Wind Scepter")
        ..generateTooltip("It allows the hero to cast the Cyclone spell, which shakes an enemy unit in the air and prevents it from attacking, moving or casting spells.\nLasts 2.5 seconds.")
        ..setTooltipBasic("[|cffffcc00R|r] Buy Wind Scepter"))
        ..register()

public constant GREATER_HEALING_POTION = compiletime(
    new RecipeItem('pghe')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(200)
        ..setStockReplenishInterval(30)
        ..setStockMaximum(2)
        ..setStockStartDelay(0)
        ..setButtonPositionX(0)
        ..setButtonPositionY(1)
        ..setHotkey("A")
        ..setName("Great Healing Potion")
        ..generateTooltip("Heals 500 hit points.")
        ..setTooltipBasic("[|cffffcc00A|r] Buy Great Healing Potion"))
        ..register()

public constant POTION_OF_RESTORATION = compiletime(
    new RecipeItem('pres')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(150)
        ..setAbilities(LIFE_MANA_1_SPELL.toRawCode())
        ..setInterfaceIcon(Icons.bTNMinorRejuvPotion)
        ..setButtonPositionX(0)
        ..setButtonPositionY(1)
        ..setHotkey("A")
        ..setName("Potion of Restoration")
        ..generateTooltip(LIFE_MANA_1_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00A|r] Potion of Restoration"))
        ..register()

public constant GREATER_MANA_POTION = compiletime(
    new RecipeItem('pgma')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(200)
        ..setStockReplenishInterval(30)
        ..setStockMaximum(2)
        ..setStockStartDelay(0)
        ..setButtonPositionX(1)
        ..setButtonPositionY(1)
        ..setHotkey("S")
        ..setName("Great Mana Potion")
        ..generateTooltip("Restores 300 mana points.")
        ..setTooltipBasic("[|cffffcc00S|r] Buy Great Mana Potion"))
        ..register()

public constant GREATER_POTION_OF_RESTORATION = compiletime(
    new RecipeItem('pres')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(200)
        ..setLumberCost(1)
        ..setAbilities(LIFE_MANA_2_SPELL.toRawCode())
        ..setInterfaceIcon(Icons.bTNRejuvPotion)
        ..setButtonPositionX(0)
        ..setButtonPositionY(1)
        ..setHotkey("S")
        ..setName("Greater Potion of Restoration")
        ..generateTooltip(LIFE_MANA_2_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00S|r] Greater Potion of Restoration"))
        ..register()

public constant SCROLL_OF_PROTECTION = compiletime(
    new RecipeItem('spro')
        //..setArmorType(ArmorSoundType.Ethereal)
        ..setClassification("Charged")
        ..setGoldCost(125)
        ..setStockReplenishInterval(30)
        ..setStockStartDelay(0)
        ..setButtonPositionX(2)
        ..setButtonPositionY(1)
        ..setHotkey("D")
        ..setName("Scroll of Protection")
        ..generateTooltip("Increases the armor of all friendly units in the area near your hero by 3 for 20 seconds.")
        ..setTooltipBasic("[|cffffcc00D|r] Buy Scroll of Protection"))
        ..register()

public constant SCROLL_OF_SPEED = compiletime(
    new RecipeItem('shas')
        //..setArmorType(ArmorSoundType.Ethereal)
        ..setClassification("Charged")
        ..setGoldCost(110)
        ..setStockReplenishInterval(45)
        ..setStockMaximum(2)
        ..setStockStartDelay(0)
        ..setButtonPositionX(3)
        ..setButtonPositionY(1)
        ..setHotkey("F")
        ..setName("Scroll of speed")
        ..generateTooltip("Increases the movement speed of the hero and nearby allied units to their maximum movement speed.")
        ..setTooltipBasic("[|cffffcc00F|r] Buy Scroll of speed"))
        ..register()

public constant INVULNERAVILITY_POTION = compiletime(
    new RecipeItem('pnvu')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(200)
        ..setLumberCost(3)
        ..setAbilities(INVULNERABILITY_SPELL.toRawCode())
        ..setStockReplenishInterval(45)
        ..setStockStartDelay(0)
        ..setButtonPositionX(0)
        ..setButtonPositionY(2)
        ..setHotkey("Z")
        ..setName("Invulnerability Potion")
        ..generateTooltip(INVULNERABILITY_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00Z|r] Buy Invulnerability Potion"))
        ..register()

public constant SENTINEL_TOTEMS = compiletime(
    new RecipeItem('wswd')
        //..setArmorType(ArmorSoundType.Wood)
        ..setClassification("Charged")
        ..setGoldCost(55)
        ..setStockMaximum(2)
        ..setButtonPositionX(1)
        ..setButtonPositionY(2)
        ..setHotkey("X")
        ..setName("Sentinel Totems")
        ..generateTooltip("Plant a Sentinel Totem to spy on an area for 300 seconds.\nContains 2 uses.")
        ..setTooltipBasic("[|cffffcc00X|r] Buy Sentinel Totems"))
        ..register()

public constant VAMPIRIC_POTION = compiletime(
    new RecipeItem('vamp')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(100)
        ..setStockReplenishInterval(20)
        ..setButtonPositionX(2)
        ..setButtonPositionY(2)
        ..setHotkey("C")
        ..setName("Vampiric Potion")
        ..generateTooltip("Adds 12 bonus damage and a life-stealing attack to the hero. \nLasts 20 seconds.")
        ..setTooltipBasic("[|cffffcc00C|r] Buy Vampiric Potion"))
        ..register()

public constant ANTIMAGIC_POTION = compiletime(
    new RecipeItem('pams')
        //..setArmorType(ArmorSoundType.Stone)
        ..setClassification("Charged")
        ..setGoldCost(150)
        ..setLumberCost(2)
        ..setAbilities(ANTIMAGIC_SPELL.toString())
        ..setStockReplenishInterval(30)
        ..setButtonPositionX(3)
        ..setButtonPositionY(2)
        ..setHotkey("V")
        ..setName("Anti-magic potion")
        ..generateTooltip(ANTIMAGIC_TOOLTIP)
        ..setTooltipBasic("[|cffffcc00V|r] Buy Anti-magic potion"))
        ..register()
