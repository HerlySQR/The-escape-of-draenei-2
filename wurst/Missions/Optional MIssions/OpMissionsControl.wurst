package OpMissionsControl

import public Functions
import public ModeSelection
import public PlayerData
import public DefineMissions
import public GeneratedValues
import public Imports
import public Reset
import public Missions
import public HeroType
import initlater VoidTraveller
import initlater TheReader

import public EventHelper
import public RegisterEvents
import public ClosureTimers
import public Dialog
import public Orders
import public Assets
import public UnitObjEditing
import public ItemObjEditing
import public AbilityObjEditing
import public ObjectIdGenerator
import public ObjectIds
import public Reference

import public UnitTransmission
import public BountyController

public force array theyKnowYou
public force array disturbed

public constant isHero = Condition(() -> GetEnteringUnit().isType(UNIT_TYPE_HERO))

public function unit.isAnimal() returns bool
    return HeroType.get(this) == SALAMANDER or
           HeroType.get(this) == SPIRIT_WOLF

public function disturbing(player p, int index)
    if theyKnowYou[index].has(p) and not disturbed[index].has(p)
        var message = ""
        switch index
            case voidTravellerIndex
                message = "|cff32cd32HELP:|r He can see your soul."
            case theReaderIndex
                message = "|cff32cd32HELP:|r Maybe she learnt something about voodoo in her books."
        
        doAfter(2.) -> 
            QuestMessageBJ(theyKnowYou[index], bj_QUESTMESSAGE_HINT, message)
            disturbed[index].add(p)
