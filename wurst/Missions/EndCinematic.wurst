package EndCinematic

import Functions
import HeroSelection
import PlayerData
import Surrender
import Towers
import GeneratedValues
import Reset

import Cinematic
import ClosureForGroups
import EventHelper
import Orders
import ClosureTimers

let toLeave = CreateTrigger()..disable()
let toNotSeeThem = CreateTrigger()..disable()

public function draeneiCinematic()
    ClearSelection()
    forUnitsInRect(bj_mapInitialPlayableArea , u -> begin
        if u.isType(UNIT_TYPE_SUMMONED)
            u.remove()
        else if u.isType(UNIT_TYPE_HERO)
            SuspendHeroXP(u, true)
    end)
    for i = 1 to 10
        hero[i].revive(actDrSpawn.getCenter(), false)
    for i = 1 to 8
        createUnit(DRAENEI, DRAENEI_WORKER, Rects.whereTheWorkersWere.randomPoint(), UNIT_FACING)
    for i = 1 to 5
        hero[i].setPos(Rects.whereTheDraeneiAppear2.getCenter())
    if not theySurrender
        for i = 6 to 10
            hero[i].setPos(Rects.whereTheDemonsAppear.getCenter())
    else
        for i = 6 to 10
            hero[i].hide()
    StopMusic(true)
    PlayMusic("Sound\\Music\\mp3Music\\DarkVictory.mp3")
    inCinematic = true

    FogMaskEnable(false)
    FogEnable(false)
    
    new Cinematic(
        asList(
            Cinematic.doNothingSeq(0.3.seconds()),
            Cinematic.applyCameraSetupSeq(Cams.draeneiWin),
            Cinematic.doNothingSeq(1..seconds()),
            () -> begin
                toLeave.enable()
                toNotSeeThem.enable()
                createNUnits(DRAENEI, 4, DRAENEI_WORKER, Rects.whereTheDraeneiAppear1.getCenter(), UNIT_FACING)
                createNUnits(DRAENEI, 3, 'ndrt', Rects.whereTheDraeneiAppear2.getCenter(), UNIT_FACING)
                forUnitsInRect(Rects.whereTheDraeneiAppear1, u -> u.issuePointOrderById(Orders.move, Rects.exitPoint.getCenter()))
                forUnitsInRect(Rects.whereTheDraeneiAppear2, u -> u.issuePointOrderById(Orders.attack, Rects.exitPoint.getCenter()))
                if not theySurrender
                    createNUnits(DEMON, 3, 'nfgb', Rects.whereTheDemonsAppear.getCenter(), UNIT_FACING)
                    forUnitsInRect(Rects.whereTheDemonsAppear, u -> u.issuePointOrderById(Orders.attack, Rects.exitPoint.getCenter()))
                return 12..seconds()
            end,
            Cinematic.fadeOutSeq(12..seconds()),
            () -> begin
                Cinematic.fadeIn(12..seconds())
                return 4.5.seconds()
            end),
        () -> begin
            inCinematic = false
            toLeave.disable()
            toNotSeeThem.disable()
            // TODO: First person
            forUnitsInRect(Rects.entrance, u -> begin
                if not u.isType(UNIT_TYPE_HERO) and not u.isType(UNIT_TYPE_STRUCTURE)
                    u.remove()
            end)
            ResetToGameCamera(0.)
            
            FogMaskEnable(true)
            FogEnable(true)
            
            doAfter(14.5) -> 
                StopMusic(true)
                PlayMusic("music")
                resetGame()
            return 0..seconds()
        end
    )

init
    toLeave
        ..registerRectEnterEventSource(Rects.exitPoint)
        .addAction(() -> begin
            if THE_DRAENEI.has(GetEnteringUnit().getOwner())
                SetUnitPathing(GetEnteringUnit(), false)
                GetEnteringUnit().issuePointOrderById(Orders.move, Rects.theyAreGone.getCenter())
        end)
    toNotSeeThem
        ..registerRectEnterEventSource(Rects.theyAreGone)
        .addAction(() -> GetEnteringUnit().hide())

public function demonsCinematic()
    ClearSelection()
    forUnitsInRect(bj_mapInitialPlayableArea , u -> begin
        if u.isType(UNIT_TYPE_SUMMONED)
            u.remove()
        else if u.isType(UNIT_TYPE_HERO)
            SuspendHeroXP(u, true)
    end)
    forUnitsInRect(Rects.dungeon, u -> begin
        if not (u.isType(UNIT_TYPE_HERO) or u.isType(UNIT_TYPE_STRUCTURE) or u.getOwner() == players[PLAYER_NEUTRAL_PASSIVE])
            u.remove()
    end)
    forDestructablesInRect(Rects.dungeon, d -> begin
        DestructableRestoreLife(d, GetDestructableMaxLife(d), false)
    end)
    for i = 1 to 10
        hero[i].revive(actDrSpawn.getCenter(), false)

    hero[1]..setPos(Rects.iLost1.getCenter())..setFacing(180..asAngleDegrees())
    hero[2]..setPos(Rects.iLost2.getCenter())..setFacing(180..asAngleDegrees())
    hero[3]..setPos(Rects.iLost3.getCenter())..setFacing(180..asAngleDegrees())
    hero[4]..setPos(Rects.iLost4.getCenter())..setFacing(180..asAngleDegrees())
    hero[5]..setPos(Rects.iLost5.getCenter())..setFacing(180..asAngleDegrees())
    hero[6]..setPos(Rects.iWin1.getCenter())..setFacing(0..asAngleDegrees())
    hero[7]..setPos(Rects.iWin2.getCenter())..setFacing(0..asAngleDegrees())
    hero[8]..setPos(Rects.iWin3.getCenter())..setFacing(0..asAngleDegrees())
    hero[9]..setPos(Rects.iWin4.getCenter())..setFacing(0..asAngleDegrees())
    hero[10]..setPos(Rects.iWin5.getCenter())..setFacing(0..asAngleDegrees())
    for i = 1 to 10
        hero[i].pause()
    StopMusic(true)
    PlayMusic("Sound\\Music\\mp3Music\\DarkAgents.mp3")
    for i = 1 to 8
        createUnit(DRAENEI, DRAENEI_WORKER, Rects.whereTheWorkersWere.randomPoint(), UNIT_FACING)
    createUnit(DEMON, 'nbal', Rects.guard1.getCenter(), UNIT_FACING)
        ..issuePointOrderById(Orders.patrol, Rects.guard2.getCenter())
        ..setInvulnerable(true)
    createUnit(DEMON, 'nbal', Rects.guard3.getCenter(), UNIT_FACING)
    createUnit(DEMON, 'nbal', Rects.guard4.getCenter(), UNIT_FACING)

    FogMaskEnable(false)
    FogEnable(false)
    
    new Cinematic(
        asList(
            Cinematic.doNothingSeq(0.3.seconds()),
            Cinematic.applyCameraSetupSeq(Cams.demonsWin1),
            () -> begin
                CameraSetupApplyForceDuration(Cams.demonsWin2, true, 11.00)
                return 12..seconds()
            end,
            Cinematic.fadeOutSeq(12..seconds()),
            () -> begin
                Cinematic.fadeIn(12..seconds())
                return 4.5.seconds()
            end),
        () -> begin
            // TODO: First person
            forUnitsInRect(Rects.dungeon, u -> begin
                if not (u.isType(UNIT_TYPE_STRUCTURE) or u.getTypeId() == DRAENEI_WORKER or u.getOwner() == players[PLAYER_NEUTRAL_PASSIVE])
                    u.remove()
                if u.isType(UNIT_TYPE_HERO)
                    u.hide()
            end)
            ResetToGameCamera(0.)
            
            FogMaskEnable(true)
            FogEnable(true)
            
            doAfter(14.5) -> 
                StopMusic(true)
                PlayMusic("music")
                resetGame()
            return 0..seconds()
        end
    )