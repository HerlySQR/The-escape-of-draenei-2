package AIDungeon

import AIMissionController

init
    addBotAction(bot -> begin
        if actMission == 1 and wannaDoMission[bot]
            let h = hero[bot]
            if THE_DRAENEI.has(h)
                if Dests.dungeonExitDoor1.isAliveTrick()
                    if h.getCurrentOrder() != Orders.attack and not isCasting[bot]
                        if Dests.dungeonExitDoor1.getPos().distanceTo(h.getPos()) > 300.
                            h.issuePointOrderById(Orders.attack, Dests.dungeonExitDoor1.getPos())
                        else
                            h.issueTargetOrderById(Orders.attack, Dests.dungeonExitDoor1)
                else
                    if Dests.dungeonExitDoor2.isAliveTrick()
                        if h.getCurrentOrder() != Orders.attack and not isCasting[bot]
                            if Dests.dungeonExitDoor2.getPos().distanceTo(h.getPos()) > 300.
                                h.issuePointOrderById(Orders.attack, Dests.dungeonExitDoor2.getPos())
                            else
                                h.issueTargetOrderById(Orders.attack, Dests.dungeonExitDoor2)
            else
                if wannaInspect[bot]
                    if h.getCurrentOrder() != Orders.attack and not isCasting[bot]
                        if Dests.dungeonExitDoor1.isAliveTrick()
                            h.issuePointOrderById(Orders.attack, Dests.dungeonExitDoor1.getPos())
                        else
                            if Dests.dungeonExitDoor2.isAliveTrick()
                                h.issuePointOrderById(Orders.attack, Dests.dungeonExitDoor2.getPos())
    end)

    let cond = Condition(() -> actMission == 1)

    CreateTrigger()
        ..registerRectEnterEventSource(Rects.missionObjective11)
        ..registerRectEnterEventSource(Rects.missionObjective12)
        ..addCondition(cond)
        ..addAction(() -> begin
            let p = GetEnteringUnit().getOwner()
            if THE_DRAENEI.has(p) and not p.isBot()
                drDoingMission.add(GetEnteringUnit())
        end)

    CreateTrigger()
        ..registerRectLeaveEventSource(Rects.missionObjective11)
        ..registerRectLeaveEventSource(Rects.missionObjective12)
        ..addCondition(cond)
        ..addAction(() -> begin
            let p = GetLeavingUnit().getOwner()
            if THE_DRAENEI.has(p) and not p.isBot()
                drDoingMission.remove(GetLeavingUnit())
        end)