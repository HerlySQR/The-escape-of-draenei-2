package ItemBuild

import ItemPool
import Shops
import ModeSelection

import LinkedList
import HashMap

import RecipeItem

let consummablesPool = new ItemPool()
    ..add(HEALING_POTION.getNewId(), 100)
    ..add(HEALING_SALVE.getNewId(), 100)
    ..add(MANA_POTION.getNewId(), 100)
    ..add(CLARITY_POTION.getNewId(), 100)
    ..add(SCROLL_OF_THE_BEAST.getNewId(), 40)
    ..add(WIND_SCEPTER.getNewId(), 40)
    ..add(GREATER_HEALING_POTION.getNewId(), 50)
    ..add(POTION_OF_RESTORATION.getNewId(), 50)
    ..add(GREATER_MANA_POTION.getNewId(), 50)
    ..add(GREATER_POTION_OF_RESTORATION.getNewId(), 50)
    ..add(SCROLL_OF_PROTECTION.getNewId(), 30)
    ..add(SCROLL_OF_SPEED.getNewId(), 30)
    ..add(INVULNERAVILITY_POTION.getNewId(), 10)
    ..add(VAMPIRIC_POTION.getNewId(), 30)
    ..add(STAFF_OF_NEGATION.getNewId(), 30)
    ..add(NETHER_POTION.getNewId(), 20)
    ..add(POWER_BOOSTER.getNewId(), 50)
    ..add(GOBLIN_LANDMINES.getNewId(), 10)
    ..add(SHIELD_RUNE.getNewId(), 10)
    ..add(STONE_GOLEM.getNewId(), 10)

let damageRecipesPool = new ItemPool()
    ..add(MASK_OF_DEATH castTo int, 10)
    ..add(WAR_HELMET castTo int, 10)
    ..add(FIRE_BLADE castTo int, 10)
    ..add(STAFF_OF_SILENCE castTo int, 10)

let orbRecipesPool = new ItemPool()
    ..add(GLOVES_OF_CORRUPTION castTo int, 10)
    ..add(SHAMANS_CLAWS castTo int, 10)
    ..add(NORTHREND_ARTIFACT castTo int, 10)

let defenseRecipesPool = new ItemPool()
    ..add(SHIELD_OF_HONOR castTo int, 10)
    ..add(RING_OF_REGENERATION_1 castTo int, 10)
    ..add(SHIELD_OF_LORD_OF_DEAD castTo int, 10)

let magicRecipesPool = new ItemPool()
    ..add(SOBI_MASK_1 castTo int, 10)
    ..add(RUNIC_BRACERS castTo int, 10)
    ..add(ENERGY_PENDANT castTo int, 10)
    ..add(STAFF_OF_THE_CYCLONES castTo int, 10)

let miscRecipesPool = new ItemPool()
    ..add(RUNIC_BRACERS castTo int, 10)
    ..add(IMPULSE_BOOTS castTo int, 10)
    ..add(POWER_BOOTS castTo int, 10)

let miscItemsPool = new ItemPool()
    ..add(HORN_OF_THE_LEGION castTo int, 10)
    ..add(ACID_STONE castTo int, 10)

let noRecipesPool = new ItemPool()
    ..add(CLAWS_OF_ATTACK_21.getNewId(), 10)
    ..add(RING_OF_PROTECTION_6.getNewId(), 10)
    ..add(GLOVES_OF_HASTE.getNewId(), 10)
    ..add(KHADGAR_HEATH_STONE.getNewId(), 10)
    ..add(MANA_PENDANT.getNewId(), 10)
    ..add(STORM_DIAMOND.getNewId(), 10)

let orbPool = new ItemPool()
    ..add(ORB_OF_CORRUPTION.getNewId(), 10)
    ..add(ORB_OF_LIGHTNING.getNewId(), 10)
    ..add(ICE_ORB.getNewId(), 10)

let shopOfTheItem = new HashMap<int, int>()
let ingredientsForRecipe = new HashMap<int, LinkedList<int>>()

function LinkedList<int>.addIfDontHave(ItemPool pool)
    var itm = pool.get()
    var i = 0
    while this.has(itm) and i < 10
        itm = pool.get()
        i++

    this.add(itm)

public tuple itemShop(int itm, int shop)

public class ItemBuild
    private int currentItemToBuy = 0
    private LinkedList<int> build = new LinkedList<int>()

    construct(unit h)
        switch whatMode[3]
            case Mode.ALL_ITEMS
                let recipes = new LinkedList<int>()
                let isMage = h.getInt(true) > (h.getStr(true) + h.getAgi(true)) / 2
                if isMage
                    recipes.addIfDontHave(magicRecipesPool)
                    recipes.addIfDontHave(magicRecipesPool)
                else
                    if GetRandomInt(0, 100) < 50
                        if GetRandomInt(0, 100) < 50
                            recipes.addIfDontHave(damageRecipesPool)
                        else
                            recipes.addIfDontHave(orbRecipesPool)
                    else
                        recipes.addIfDontHave(magicRecipesPool)
                
                if GetRandomInt(0, 100) < 50
                    recipes.addIfDontHave(defenseRecipesPool)
                else
                    recipes.addIfDontHave(magicRecipesPool)
                
                if GetRandomInt(0, 100) < 50
                    recipes.addIfDontHave(defenseRecipesPool)
                else
                    recipes.addIfDontHave(damageRecipesPool)
                
                for recipe in recipes
                    for ingredient in ingredientsForRecipe.get(recipe)
                        if ingredientsForRecipe.has(ingredient)
                            for ingredient2 in ingredientsForRecipe.get(ingredient)
                                build.add(ingredient2)
                        else
                            build.add(ingredient)
                
                destroy recipes
            case Mode.NO_RECIPES
                build.addIfDontHave(noRecipesPool)
                build.addIfDontHave(noRecipesPool)
                build.addIfDontHave(noRecipesPool)
                if GetRandomInt(0, 100) < 50
                    build.addIfDontHave(noRecipesPool)
                else
                    build.addIfDontHave(orbPool)
            default

    function get() returns itemShop
        let random = GetRandomInt(0, 100)
        int itm
        if random < 65
            itm = consummablesPool.get()
        else
            if not build.isEmpty() and currentItemToBuy == 0
                itm = build.getRandomElement()
                build.remove(itm)
                currentItemToBuy = itm
            else
                itm = consummablesPool.get()

        if itm == RING_OF_REGENERATION_1.getNewId() and whatMode[5] == Mode.LEVELING
            itm = RING_OF_REGENERATION_2.getNewId()
        if itm == SOBI_MASK_1.getNewId() and whatMode[5] == Mode.LEVELING
            itm = SOBI_MASK_2.getNewId()

        return itemShop(itm, shopOfTheItem.get(itm))

    function itemIsBought()
        currentItemToBuy = 0
    
    ondestroy
        destroy build

init
    shopOfTheItem.put(HEALING_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(HEALING_SALVE.getNewId(), MERCHANT)
    shopOfTheItem.put(MANA_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(CLARITY_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(SCROLL_OF_THE_BEAST.getNewId(), MERCHANT)
    shopOfTheItem.put(WIND_SCEPTER.getNewId(), MERCHANT)
    shopOfTheItem.put(GREATER_HEALING_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(POTION_OF_RESTORATION.getNewId(), MERCHANT)
    shopOfTheItem.put(GREATER_MANA_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(GREATER_POTION_OF_RESTORATION.getNewId(), MERCHANT)
    shopOfTheItem.put(SCROLL_OF_PROTECTION.getNewId(), MERCHANT)
    shopOfTheItem.put(SCROLL_OF_SPEED.getNewId(), MERCHANT)
    shopOfTheItem.put(INVULNERAVILITY_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(VAMPIRIC_POTION.getNewId(), MERCHANT)
    shopOfTheItem.put(SCROLL_OF_SPEED.getNewId(), MERCHANT)

    shopOfTheItem.put(STAFF_OF_NEGATION.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(GLOVES_OF_HASTE.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(NETHER_POTION.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(GOBLIN_LANDMINES.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(KHADGAR_HEATH_STONE.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(MANA_PENDANT.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(STORM_DIAMOND.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(SUMMON_COURIER.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(GOLD_COINS.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(LUMBER_BALE.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(POWER_BOOSTER.getNewId(), SPECIAL_MERCHANT)
    shopOfTheItem.put(BOOTS_OF_SPEED.getNewId(), SPECIAL_MERCHANT)

    shopOfTheItem.put(CLAWS_OF_ATTACK_21.getNewId(), ARMS_MERCHANT)
    shopOfTheItem.put(RING_OF_PROTECTION_6.getNewId(), ARMS_MERCHANT)
    shopOfTheItem.put(ORB_OF_CORRUPTION.getNewId(), ARMS_MERCHANT)
    shopOfTheItem.put(ORB_OF_LIGHTNING.getNewId(), ARMS_MERCHANT)
    shopOfTheItem.put(ICE_ORB.getNewId(), ARMS_MERCHANT)

    shopOfTheItem.put(SHIELD_RUNE.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(STONE_GOLEM.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(CROWN_OF_KINGS.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(HORN_OF_THE_LEGION.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(WAR_HELMET.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(STAFF_OF_THE_CYCLONES.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(ACID_STONE.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(CLOACK_OF_FLAMES.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(TRAP_TOTEM.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(POWER_BOOTS.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(FIRE_BLADE.getNewId(), SECRET_MERCHANT)
    shopOfTheItem.put(STAFF_OF_SILENCE.getNewId(), SECRET_MERCHANT)

    ingredientsForRecipe.put(SHIELD_OF_HONOR.getNewId(),
        asList(
            CLAWS_OF_ATTACK_12.getNewId(),
            RING_OF_PROTECTION_2.getNewId(),
            RING_OF_PROTECTION_6.getNewId(),
            SHIELD_OF_HONOR_RECIPE.getNewId()))

    ingredientsForRecipe.put(RING_OF_REGENERATION_1.getNewId(),
        asList(
            HEALING_POTION.getNewId(),
            HEALING_POTION.getNewId(),
            HEALING_POTION.getNewId(),
            RING_OF_REGENERATION_1_RECIPE.getNewId()))

    ingredientsForRecipe.put(RING_OF_REGENERATION_2.getNewId(),
        asList(
            HEALING_SALVE.getNewId(),
            HEALING_SALVE.getNewId(),
            HEALING_SALVE.getNewId(),
            HEALING_SALVE.getNewId(),
            RING_OF_REGENERATION_2_RECIPE.getNewId()))

    ingredientsForRecipe.put(SOBI_MASK_1.getNewId(),
        asList(
            MANA_POTION.getNewId(),
            MANA_POTION.getNewId(),
            MANA_POTION.getNewId(),
            SOBI_MASK_1_RECIPE.getNewId()))

    ingredientsForRecipe.put(SOBI_MASK_2.getNewId(),
        asList(
            CLARITY_POTION.getNewId(),
            CLARITY_POTION.getNewId(),
            CLARITY_POTION.getNewId(),
            CLARITY_POTION.getNewId(),
            CLARITY_POTION.getNewId(),
            SOBI_MASK_2_RECIPE.getNewId()))

    ingredientsForRecipe.put(RUNIC_BRACERS.getNewId(),
        asList(
            ANTIMAGIC_POTION.getNewId(),
            RING_OF_REGENERATION_1.getNewId(),
            RUNIC_BRACERS_RECIPE.getNewId()))

    ingredientsForRecipe.put(IMPULSE_BOOTS.getNewId(),
        asList(
            BOOTS_OF_SPEED.getNewId(),
            SCROLL_OF_SPEED.getNewId(),
            WIND_SCEPTER.getNewId(),
            IMPULSE_BOOTS_RECIPE.getNewId()))

    ingredientsForRecipe.put(ENERGY_PENDANT.getNewId(),
        asList(
            MANA_PENDANT.getNewId(),
            SCROLL_OF_PROTECTION.getNewId(),
            ENERGY_PENDANT_RECIPE.getNewId()))

    ingredientsForRecipe.put(MASK_OF_DEATH.getNewId(),
        asList(
            CLAWS_OF_ATTACK_18.getNewId(),
            RING_OF_PROTECTION_4.getNewId(),
            VAMPIRIC_POTION.getNewId(),
            MASK_OF_DEATH_RECIPE.getNewId()))

    ingredientsForRecipe.put(SHIELD_OF_LORD_OF_DEAD.getNewId(),
        asList(
            KHADGAR_HEATH_STONE.getNewId(),
            MANA_PENDANT.getNewId(),
            RING_OF_PROTECTION_3.getNewId(),
            RING_OF_PROTECTION_4.getNewId(),
            CLOACK_OF_FLAMES.getNewId(),
            SHIELD_OF_LORD_OF_DEAD_RECIPE.getNewId()))

    ingredientsForRecipe.put(GLOVES_OF_CORRUPTION.getNewId(),
        asList(
            ORB_OF_CORRUPTION.getNewId(),
            CLAWS_OF_ATTACK_15.getNewId(),
            GLOVES_OF_HASTE.getNewId(),
            GLOVES_OF_CORRUPTION_RECIPE.getNewId()))

    ingredientsForRecipe.put(SHAMANS_CLAWS.getNewId(),
        asList(
            ORB_OF_LIGHTNING.getNewId(),
            CLAWS_OF_ATTACK_15.getNewId(),
            STORM_DIAMOND.getNewId(),
            SHAMANS_CLAWS_RECIPE.getNewId()))

    ingredientsForRecipe.put(NORTHREND_ARTIFACT.getNewId(),
        asList(
            ICE_ORB.getNewId(),
            CLAWS_OF_ATTACK_15.getNewId(),
            KHADGAR_HEATH_STONE.getNewId(),
            NORTHREND_ARTIFACT_RECIPE.getNewId()))

    ingredientsForRecipe.put(WAR_HELMET.getNewId(),
        asList(
            CROWN_OF_KINGS.getNewId(),
            WAR_HELMET_RECIPE.getNewId()))

    ingredientsForRecipe.put(STAFF_OF_THE_CYCLONES.getNewId(),
        asList(
            WIND_SCEPTER.getNewId(),
            SCROLL_OF_SPEED.getNewId(),
            SOBI_MASK_1.getNewId(),
            STAFF_OF_THE_CYCLONES_RECIPE.getNewId()))

    ingredientsForRecipe.put(POWER_BOOTS.getNewId(),
        asList(
            BOOTS_OF_SPEED.getNewId(),
            GLOVES_OF_HASTE.getNewId(),
            CLAWS_OF_ATTACK_12.getNewId(),
            POWER_BOOTS_RECIPE.getNewId()))

    ingredientsForRecipe.put(FIRE_BLADE.getNewId(),
        asList(
            CLAWS_OF_ATTACK_12.getNewId(),
            CLAWS_OF_ATTACK_15.getNewId(),
            CLAWS_OF_ATTACK_18.getNewId(),
            CLAWS_OF_ATTACK_21.getNewId(),
            FIRE_BLADE_RECIPE.getNewId()))

    ingredientsForRecipe.put(STAFF_OF_SILENCE.getNewId(),
        asList(
            STAFF_OF_NEGATION.getNewId(),
            GLOVES_OF_HASTE.getNewId(),
            CLAWS_OF_ATTACK_12.getNewId(),
            STAFF_OF_SILENCE_RECIPE.getNewId()))