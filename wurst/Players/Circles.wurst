package Circles

import ArrayList

import AbilityData
import GeneratedValues
import Reset

public constant CIRCLE = compiletime(UNIT_ID_GEN.next())

let LIFE_REGEN = compiletime(ABIL_ID_GEN.next())
let MANA_REGEN = compiletime(ABIL_ID_GEN.next())

public rect itemDraenei = Rects.items1
public rect itemDemons = Rects.items2
public unit array circle
public rect array circleRegion

ArrayList<rect> array pointCircle

public function moveCircles(int mission)
    for i = 1 to 5
        // Move demons
        forUnitsInRect(circleRegion[i + 5], u -> u.setPos(pointCircle[mission + 1].get(i).getCenter()))
        // Move draenei
        forUnitsInRect(circleRegion[i], u -> u.setPos(pointCircle[mission].get(i).getCenter()))
    switch mission
        case 2
            itemDraenei = Rects.items2
            itemDemons = Rects.items3
        case 3
            itemDraenei = Rects.items3
            itemDemons = Rects.items4
        case 4
            itemDraenei = Rects.items4
            itemDemons = Rects.items5

init
    onModesSelected(() -> begin
        if whatMode[5] == LEVELING
            circle[3].addAbility(LIFE_REGEN)
            circle[3].addAbility(MANA_REGEN)
            circle[8].addAbility(LIFE_REGEN)
            circle[8].addAbility(MANA_REGEN)
        else if whatMode[5] == NOT_LEVELING
            circle[3].removeAbility(LIFE_REGEN)
            circle[3].removeAbility(MANA_REGEN)
            circle[8].removeAbility(LIFE_REGEN)
            circle[8].removeAbility(MANA_REGEN)
    end)

    circleRegion[1] = Rects.circle11
    circleRegion[2] = Rects.circle12
    circleRegion[3] = Rects.circle13
    circleRegion[4] = Rects.circle14
    circleRegion[5] = Rects.circle15
    circleRegion[6] = Rects.circle21
    circleRegion[7] = Rects.circle22
    circleRegion[8] = Rects.circle23
    circleRegion[9] = Rects.circle24
    circleRegion[10] = Rects.circle25

    circle[1] = createUnit(players[1], CIRCLE, circleRegion[1].getCenter(), UNIT_FACING)
    circle[2] = createUnit(players[2], CIRCLE, circleRegion[2].getCenter(), UNIT_FACING)
    circle[3] = createUnit(players[3], CIRCLE, circleRegion[3].getCenter(), UNIT_FACING)
    circle[4] = createUnit(players[4], CIRCLE, circleRegion[4].getCenter(), UNIT_FACING)
    circle[5] = createUnit(players[5], CIRCLE, circleRegion[5].getCenter(), UNIT_FACING)
    circle[6] = createUnit(players[7], CIRCLE, circleRegion[6].getCenter(), UNIT_FACING)
    circle[7] = createUnit(players[8], CIRCLE, circleRegion[7].getCenter(), UNIT_FACING)
    circle[8] = createUnit(players[9], CIRCLE, circleRegion[8].getCenter(), UNIT_FACING)
    circle[9] = createUnit(players[10], CIRCLE, circleRegion[9].getCenter(), UNIT_FACING)
    circle[10] = createUnit(players[11], CIRCLE, circleRegion[10].getCenter(), UNIT_FACING)

    for i = 1 to 5
        pointCircle[i] = new ArrayList<rect>()
    
    pointCircle[1].add(Rects.circle11)
    pointCircle[1].add(Rects.circle12)
    pointCircle[1].add(Rects.circle13)
    pointCircle[1].add(Rects.circle14)
    pointCircle[1].add(Rects.circle15)
    pointCircle[2].add(Rects.circle21)
    pointCircle[2].add(Rects.circle22)
    pointCircle[2].add(Rects.circle23)
    pointCircle[2].add(Rects.circle24)
    pointCircle[2].add(Rects.circle25)
    pointCircle[3].add(Rects.circle31)
    pointCircle[3].add(Rects.circle32)
    pointCircle[3].add(Rects.circle33)
    pointCircle[3].add(Rects.circle34)
    pointCircle[3].add(Rects.circle35)
    pointCircle[4].add(Rects.circle41)
    pointCircle[4].add(Rects.circle42)
    pointCircle[4].add(Rects.circle43)
    pointCircle[4].add(Rects.circle45)
    pointCircle[4].add(Rects.circle51)
    pointCircle[5].add(Rects.circle52)
    pointCircle[5].add(Rects.circle53)
    pointCircle[5].add(Rects.circle54)
    pointCircle[5].add(Rects.circle55)

    onReset(true, () -> begin
        itemDraenei = Rects.items1
        itemDemons = Rects.items2

        circleRegion[1] = Rects.circle11
        circleRegion[2] = Rects.circle12
        circleRegion[3] = Rects.circle13
        circleRegion[4] = Rects.circle14
        circleRegion[5] = Rects.circle15
        circleRegion[6] = Rects.circle21
        circleRegion[7] = Rects.circle22
        circleRegion[8] = Rects.circle23
        circleRegion[9] = Rects.circle24
        circleRegion[10] = Rects.circle25
    end)

@compiletime function gen()
    new UnitDefinition(CIRCLE, 'ncop')
        ..setFoodProduced(5) // 5 missions
        ..setNormalAbilities(commaList(AbilityIds.invulnerable, AbilityIds.inventory))
        ..setName("Circle of power")
    
    new AbilityDefinitionAuraRegenerationHealingWard(LIFE_REGEN)
        ..setAmountofHitPointsRegenerated(1, 0.02)
        ..setPercentage(1, true)
        ..setTargetsAllowed(1, "air,allies,invulnerable,organic,ground,player,vulnerable")
        ..setAreaofEffect(1, 700.)
    
    new AbilityDefinitionNeutralRegenmanaonly(MANA_REGEN)
        ..setAmountRegenerated(1, 0.02)
        ..setPercentage(1, true)
        ..setTargetsAllowed(1, "air,allies,invulnerable,organic,ground,player,vulnerable")
        ..setAreaofEffect(1, 700.)