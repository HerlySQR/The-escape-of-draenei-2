package Killing

import ModeSelection
import MyBoard
import ArrayList
import DamageEvent
import BountyController
import TheMonster

import ClosureEvents
import ClosureTimers

/** First index: attacker, Second index: attacked */
ArrayList<int> array assistTime

init
    for i = 1 to 10
        assistTime[i] = new ArrayList<int>()
        for j = 1 to 10
            assistTime[i].add(0)
    // Kill a hero
    EventListener.add(EVENT_PLAYER_UNIT_DEATH, () -> begin
        let u = EventData.getDyingUnit()
        let p2 = u.getOwner()

        if u.isType(UNIT_TYPE_HERO) and not (p2 == DRAENEI or p2 == DEMON)
            let noKiller = GetKillingUnit() == null

            player p1 = null
            int k = 0
            let d = p2.getNumber()

            if not noKiller
                p1 = EventData.getKillingUnit().getOwner()
                k = p1.getNumber()
            
            deaths[d]++
            gameBoard.setItemValue(row[d], 3, deaths[d].toString())
            
            if noKiller
                print(playerName[k] + " just died")
            else if p1.isEnemyOf(p2)
                // Killed by an enemy
                let oldSpree = spree[d]
                spree[d] = 0

                if p1 != players[PLAYER_NEUTRAL_AGGRESSIVE]
                    if whatMode[3] != ONLY_COMSUMIBLES
                        p1.addLumber(GetRandomInt(1, 2))
            
                    p2.setGold((GetRandomReal(0.75, 0.9) * p1.getGold()).toInt())
            
                    spree[k]++
                    kills[k]++
                    gameBoard.setItemValue(row[k], 2, kills[k].toString())

                    var killingMsg = ""

                    if oldSpree >= 3
                        let extra = GetRandomInt(spree[d] * 40, spree[d] * 60)
                        killingMsg += playerName[k] + " has ended the spree of |cffffcc00" +spree[d].toString() + "|r of " + playerName[d] + " |cffffcc00(+" + extra.toString() + ")|r"
                        p1.addGold(extra)
                    else
                        killingMsg += playerName[k] + " killed " + playerName[d]
                    
                    var whoAssisted = ". Assists: "
                    var howMany = 0

                    for i = 1 to 11
                        if i != 6 and p1 != players[i]
                            let aKill = players[i].getNumber()
                            if assistTime[aKill].get(d) > 0
                                whoAssisted += playerName[aKill] + "/"
                                assists[aKill]++
                                gameBoard.setItemValue(row[aKill], 4, assists[aKill].toString())
                                if whatMode[3] != ONLY_COMSUMIBLES
                                    players[i].addLumber(GetRandomInt(0, 1))
                                new Bounty().run(GetRandomInt(30, 48), hero[aKill] == null ? circle[aKill] : hero[aKill], players[i], true, false)

                                assistTime[aKill].replace(d, 0)
                                howMany++
                    
                    if howMany > 0
                        whoAssisted = whoAssisted.subString(1, whoAssisted.length() - 1)
                        printTimedToPlayer(killingMsg + whoAssisted, 4., localPlayer)
                    else
                        printTimedToPlayer(killingMsg, 4., localPlayer)
                    
                    if p1 != DRAENEI and p1 != DEMON
                        if spree[k] >= 3
                            print(playerName[k] + " has a spree of |cffffcc00" + spree[k].toString() + "|r")
                        let fk = firstKill[k] <= 0
                        let dk = doubleKill[k] <= 0
                        let tk = tripleKill[k] <= 0
                        let uk = ultraKill[k] <= 0
                        if fk and dk and tk and uk
                            firstKill[k] = 10
                        else if not fk and dk and tk and uk
                            doubleKill[k] = 10
                            firstKill[k] = 0
                            print(playerName[k] + " just got a |cff00ffffDouble kill|r!")
                        else if fk and not dk and tk and uk
                            tripleKill[k] = 10
                            doubleKill[k] = 0
                            print(playerName[k] + " just got a |cff00ffffTriple kill|r!")
                        else if fk and dk and not tk and uk
                            ultraKill[k] = 10
                            tripleKill[k] = 0
                            print(playerName[k] + " just got a |cff00ffffUltra kill|r!")
                        else if fk and dk and tk and not uk
                            ultraKill[k] = 10
                            print(playerName[k] + " just got a |cff00ffffRampage|r!")
                else
                    if GetKillingUnit() == theMonster
                        printTimed(playerName[d] + " was killed by The Monster", 4.00)
                    else
                        printTimed(playerName[d] + " was killed by the Neutral Creeps", 4.00)
            else
                // Killed by an ally
                if p1 == p2
                    printTimed(playerName[d] + " has killed himself.", 4.00)
                else
                    printTimed(playerName[k] + " killed his teammate " + playerName[d], 4.00)
    end)

    // Assist time

    DamageEvent.addListener(() -> begin
        if DamageEvent.getTarget().isType(UNIT_TYPE_HERO)
            let p1 = DamageEvent.getSource().getOwner()
            let p2 = DamageEvent.getTarget().getOwner()
            if p1.isIngame() and p2.isIngame()
                if p1.isEnemyOf(p2)
                    assistTime[p1.getNumber()].replace(p2.getNumber(), 12)
    end)

    EventListener.onTargetCast(-1, (source, target) -> begin
        if target.isType(UNIT_TYPE_HERO)
            let p1 = source.getOwner()
            let p2 = target.getOwner()
            if p1.isIngame() and p2.isIngame()
                if p1.isEnemyOf(p2)
                    assistTime[p1.getNumber()].replace(p2.getNumber(), 12)
    end)

    doPeriodically(1.00, cb -> begin
        // Reducing assist
        for i = 1 to 5
            for j = 6 to 10
                assistTime[i].replace(j, assistTime[i].get(j) - 1)
                assistTime[j].replace(i, assistTime[j].get(i) - 1)
        // Reducing spree
        for i = 1 to 10
            firstKill[i]--
            doubleKill[i]--
            tripleKill[i]--
            ultraKill[i]--
    end)