package HeroType

import Imports

import Assets
import ObjectIdGenerator
import UnitObjEditing
import HashMap

// More easy to remember

public constant DEMOLISHER = compiletime(new HeroType('Obla'))
public constant DARK_ASSASSIN = compiletime(new HeroType('Obla'))

public constant N_DARK_ASSASSIN = 'O005'
public constant N_ELDER_SAGE = 'O002'
public constant N_SEER = 'O006'
public constant N_HERALD = 'O001'
public constant N_SALAMANDER = 'O004'
public constant N_SPIRIT_WOLF = 'O00F'
public constant N_ANCHORITE = 'H00N'
public constant N_VINDICATOR = 'H00X'
public constant N_ZEALOT = 'O00J'
public constant N_PROPHET = 'U00M'
public constant N_BLOOD_DEMON = 'U001'
public constant N_CACIQUE = 'U008'
public constant N_DARK_SPECTRE = 'U00A'
public constant N_DOOM_GUARD = 'U004'
public constant N_ERECT_SORCERER = 'U005'
public constant N_INFERNAL_MACHINE = 'U007'
public constant N_MAIDEN_OF_PAIN = 'U006'
public constant N_TEMPTING_MALEFICENT = 'U009'
public constant N_PIT_LORD = 'N00E'
public constant N_DARK_WIZARD = 'E008'
public constant N_AXEMASTER = 'O00N'
public constant N_LAVA_ELEMENTAL = 'N01C'

public constant L_DARK_ASSASSIN = 'O000'
public constant L_ELDER_SAGE = 'O008'
public constant L_SEER = 'O009'
public constant L_HERALD = 'O00A'
public constant L_SALAMANDER = 'O00B'
public constant L_SPIRIT_WOLF = 'O00G'
public constant L_ANCHORITE = 'H00M'
public constant L_VINDICATOR = 'H00W'
public constant L_ZEALOT = 'O00K'
public constant L_PROPHET = 'U00N'
public constant L_BLOOD_DEMON = 'U000'
public constant L_CACIQUE = 'U002'
public constant L_DARK_SPECTRE = 'U003'
public constant L_DOOM_GUARD = 'U00B'
public constant L_ERECT_SORCERER = 'U00C'
public constant L_INFERNAL_MACHINE = 'U00D'
public constant L_MAIDEN_OF_PAIN = 'U00E'
public constant L_TEMPTING_MALEFICENT = 'U00F'
public constant L_PIT_LORD = 'N00P'
public constant L_DARK_WIZARD = 'E009'
public constant L_AXEMASTER = 'O00M'
public constant L_LAVA_ELEMENTAL = 'N01B'

public constant int array N_HEROS = [0,
    N_DARK_ASSASSIN,
    N_ELDER_SAGE,
    N_SEER,
    N_HERALD,
    N_SALAMANDER,
    N_SPIRIT_WOLF,
    N_ANCHORITE,
    N_VINDICATOR,
    N_ZEALOT,
    N_PROPHET,
    N_BLOOD_DEMON,
    N_CACIQUE,
    N_DARK_SPECTRE,
    N_DOOM_GUARD,
    N_ERECT_SORCERER,
    N_INFERNAL_MACHINE,
    N_MAIDEN_OF_PAIN,
    N_MAIDEN_OF_PAIN,
    N_TEMPTING_MALEFICENT,
    N_PIT_LORD,
    N_DARK_WIZARD,
    N_AXEMASTER,
    N_LAVA_ELEMENTAL
]

public constant int array L_HEROS = [0,
    L_DARK_ASSASSIN,
    L_ELDER_SAGE,
    L_SEER,
    L_HERALD,
    L_SALAMANDER,
    L_SPIRIT_WOLF,
    L_ANCHORITE,
    L_VINDICATOR,
    L_ZEALOT,
    L_PROPHET,
    L_BLOOD_DEMON,
    L_CACIQUE,
    L_DARK_SPECTRE,
    L_DOOM_GUARD,
    L_ERECT_SORCERER,
    L_INFERNAL_MACHINE,
    L_MAIDEN_OF_PAIN,
    L_TEMPTING_MALEFICENT,
    L_PIT_LORD,
    L_DARK_WIZARD,
    L_AXEMASTER,
    L_LAVA_ELEMENTAL
]

HashMap<int, HeroType> heroTypes

function HeroDefinition.defaultStats()
    this
        ..setAttack1TargetsAllowed("air,debris,structure,item,ground,ward")
        ..setAttacksEnabled(1)
        ..hideHeroDeathMsg(true)
        ..setManaInitialAmount(1000)
        ..setFoodCost(0)
        ..setPriority(5)
        ..setHitPointsRegenerationType("always")
        ..setProperNamesUsed(1)

public class HeroType
    static int MAX = 0
    static boolean level
    static string array roots

    HeroDefinition heroNL
    HeroDefinition heroL
    string icon

    construct(int origId)
        MAX++
        heroL = new HeroDefinition(UNIT_ID_GEN.next(), origId)..defaultStats()
        heroNL = new HeroDefinition(UNIT_ID_GEN.next(), origId)..defaultStats()

        heroTypes.put(heroL.getNewId(), this)
        heroTypes.put(heroNL.getNewId(), this)

    static function get(unit u) returns HeroType
        return heroTypes.get(u.getTypeId())

    static function get(int typ) returns HeroType
        return heroTypes.get(typ)
    
    function getNL() returns int
        return heroNL.getNewId()
    
    function getL() returns int
        return heroL.getNewId()

    function setIcon(string icon)
        this.icon = icon
        heroNL
            ..setIconGameInterface(icon)
            ..setIconScoreScreen(icon)
        heroL
            ..setIconGameInterface(icon)
            ..setIconScoreScreen(icon)
    
    function setAcquisitionRange(real data)
        heroNL.setAcquisitionRange(data)
        heroL.setAcquisitionRange(data)
    
    function setAttack1Range(int data)
        if data > 128
            heroNL
                ..setAttack1ProjectileHomingEnabled(true)
                ..setAttack1WeaponSound(WeaponSound.Nothing)
                ..setAttack1WeaponType(WeaponType.Missile)
            heroL
                ..setAttack1ProjectileHomingEnabled(true)
                ..setAttack1WeaponSound(WeaponSound.Nothing)
                ..setAttack1WeaponType(WeaponType.Missile)
        else
            heroNL
                ..setAttack1WeaponType(WeaponType.Normal)
            heroL
                ..setAttack1WeaponType(WeaponType.Normal)

        heroNL.setAttack1Range(data)
        heroL.setAttack1Range(data)
    
    function setAttack1Animation(real point, real back)
        heroNL
            ..setAttack1AnimationDamagePoint(point)
            ..setAttack1AnimationBackswingPoint(back)
        heroL
            ..setAttack1AnimationDamagePoint(point)
            ..setAttack1AnimationBackswingPoint(back)
    
    function setAttack1ProjectileArc(real data)
        heroNL.setAttack1ProjectileArc(data)
        heroL.setAttack1ProjectileArc(data)
    
    function setAttack1Damage(int base, int dice, int sides)
        heroNL
            ..setAttack1DamageBase(base)
            ..setAttack1DamageNumberofDice(dice)
            ..setAttack1DamageSidesperDie(sides)
        heroL
            ..setAttack1DamageBase(base - 20)
            ..setAttack1DamageNumberofDice(dice)
            ..setAttack1DamageSidesperDie(sides)
    
    function setAttack1DamageFactor(real medium, real small)
        heroNL
            ..setAttack1DamageFactorMedium(medium)
            ..setAttack1DamageFactorSmall(small)
        heroL
            ..setAttack1DamageFactorMedium(medium)
            ..setAttack1DamageFactorSmall(small)
    
    function setAttack1ProjectileArt(string data)
        heroNL.setAttack1ProjectileArt(data)
        heroL.setAttack1ProjectileArt(data)
    
    function setAttack1AttackType(AttackType data)
        heroNL.setAttack1AttackType(data)
        heroL.setAttack1AttackType(AttackType.Hero)
    
    function setAttack1AreaofEffect(int full, int half, int quarter)
        heroNL
            ..setAttack1AreaofEffectFullDamage(full)
            ..setAttack1AreaofEffectMediumDamage(half)
            ..setAttack1AreaofEffectSmallDamage(quarter)
        heroL
            ..setAttack1AreaofEffectFullDamage(full)
            ..setAttack1AreaofEffectMediumDamage(half)
            ..setAttack1AreaofEffectSmallDamage(quarter)
    
    function setAttack1WeaponSound(WeaponSound data)
        heroNL.setAttack1WeaponSound(data)
        heroL.setAttack1WeaponSound(data)
    
    function setAttack1ProjectileSpeed(int data)
        heroNL.setAttack1ProjectileSpeed(data)
        heroL.setAttack1ProjectileSpeed(data)
    
    function setArmorSoundType(ArmorSoundType data)
        heroNL.setArmorSoundType(data)
        heroL.setArmorSoundType(data)
    
    function setSightRadiusDay(int data)
        heroNL.setSightRadiusDay(data)
        heroL.setSightRadiusDay(data)
    
    function setStartingStats(int str, int agi, int intel)
        heroNL
            ..setStartingStrength(1)
            ..setStartingAgility(1)
            ..setStartingIntelligence(1)
        heroL
            ..setStartingStrength(str)
            ..setStartingAgility(agi)
            ..setStartingIntelligence(intel)
    
    function setStatsPerLevel(real str, real agi, real intel)
        heroNL
            ..setStrengthPerLevel(0.)
            ..setAgilityPerLevel(0.)
            ..setIntelligencePerLevel(0.)
        heroL
            ..setStrengthPerLevel(str)
            ..setAgilityPerLevel(agi)
            ..setIntelligencePerLevel(intel)
    
    function setPrimaryAttribute(string data)
        heroNL.setPrimaryAttribute(data)
        heroL.setPrimaryAttribute(data)
    
    function setHitPointsRegenerationRate(real data)
        heroNL.setHitPointsRegenerationRate(data)
        heroL.setHitPointsRegenerationRate(0.25)
    
    function setManaRegeneration(real data)
        heroNL.setManaRegeneration(data)
        heroL.setHitPointsRegenerationRate(0.01)
    
    function setAnimationCastPoint(real data)
        heroNL.setAnimationCastPoint(data)
        heroL.setAnimationCastPoint(data)
    
    function setAnimationSpeed(real run, real walk)
        heroNL
            ..setAnimationRunSpeed(run)
            ..setAnimationWalkSpeed(walk)
        heroL
            ..setAnimationRunSpeed(run)
            ..setAnimationWalkSpeed(walk)
    
    function setModelFile(string data)
        heroNL.setModelFile(data)
        heroL.setModelFile(data)
    
    function setModelFileExtraVersions(string data)
        heroNL.setModelFileExtraVersions(data)
        heroL.setModelFileExtraVersions(data)
    
    function setTintingColor(color col)
        heroNL
            ..setTintingColorRed(col.red)
            ..setTintingColorGreen(col.green)
            ..setTintingColorBlue(col.blue)
        heroL
            ..setTintingColorRed(col.red)
            ..setTintingColorGreen(col.green)
            ..setStartingIntelligence(col.blue)
    
    function setElevationSample(int points, real radius)
        heroNL
            ..setElevationSamplePoints(points)
            ..setElevationSampleRadius(radius)
        heroL
            ..setElevationSamplePoints(points)
            ..setElevationSampleRadius(radius)
    
    function setSelectionScale(real data)
        heroNL.setSelectionScale(data)
        heroL.setSelectionScale(data)
    
    function setArtSpecial(string data)
        heroNL.setArtSpecial(data)
        heroL.setArtSpecial(data)
    
    function setShadowImageSize(real data)
        heroNL
            ..setShadowImageWidth(data)
            ..setShadowImageHeight(data)
        heroL
            ..setShadowImageWidth(data)
            ..setShadowImageHeight(data)
    
    function setShadowImageCenter(real data)
        heroNL
            ..setShadowImageCenterX(data)
            ..setShadowImageCenterY(data)
        heroL
            ..setShadowImageCenterX(data)
            ..setShadowImageCenterY(data)
    
    function setProjectileImpactZ(real data)
        heroNL.setProjectileImpactZ(data)
        heroL.setProjectileImpactZ(data)
    
    function setOrientationInterpolation(int data)
        heroNL.setOrientationInterpolation(data)
        heroL.setOrientationInterpolation(data)
    
    function setProjectileLaunch(real x, real y, real z)
        heroNL
            ..setProjectileLaunchX(x)
            ..setProjectileLaunchY(y)
            ..setProjectileLaunchZ(z)
        heroL
            ..setProjectileLaunchX(x)
            ..setProjectileLaunchY(y)
            ..setProjectileLaunchZ(z)
    
    function setProjectileLaunchZSwimming(real data)
        heroNL.setProjectileLaunchZSwimming(data)
        heroL.setProjectileLaunchZSwimming(data)
    
    function setMaximumRotation(real pitch, real roll)
        heroNL
            ..setMaximumPitchAngledegrees(pitch)
            ..setMaximumRollAngledegrees(roll)
        heroL
            ..setMaximumPitchAngledegrees(pitch)
            ..setMaximumRollAngledegrees(roll)
    
    function setDeathTimeseconds(real data)
        heroNL.setDeathTimeseconds(data)
        heroL.setDeathTimeseconds(data)
    
    function setScalingValue(real data)
        heroNL.setScalingValue(data)
        heroL.setScalingValue(data)
    
    function setPropulsionWindowdegrees(real data)
        heroNL.setPropulsionWindowdegrees(data)
        heroL.setPropulsionWindowdegrees(data)
    
    function setSpeedBase(int data)
        heroNL.setSpeedBase(data)
        heroL.setSpeedBase(data)
    
    function setTurnRate(real data)
        heroNL.setTurnRate(data)
        heroL.setTurnRate(data)
    
    function setCollisionSize(real data)
        heroNL.setCollisionSize(data)
        heroL.setCollisionSize(data)
    
    function setUnitSoundSet(string data)
        heroNL.setUnitSoundSet(data)
        heroL.setUnitSoundSet(data)
    
    function setProperNames(string data)
        heroNL.setProperNames(data)
        heroL.setProperNames(data)
    
    function setName(string data)
        heroNL.setName(data)
        heroL
            ..setName(data)
            ..setNameEditorSuffix("(Hero)")

@compiletime function gen()
    DEMOLISHER
        ..setAcquisitionRange(750.)
        ..setAttack1Range(750)
        ..setAttack1Animation(0.1, 1.9)
        ..setAttack1ProjectileArc(0.35)
        ..setAttack1Damage(66, 1, 21)
        ..setAttack1ProjectileArt(Abilities.demolisherMissile)
        ..setAttack1AttackType(AttackType.Siege)
        ..setAttack1ProjectileSpeed(900)
        ..setAttack1AreaofEffect(25, 50, 100)
        ..setArmorSoundType(ArmorSoundType.Wood)
        ..setSightRadiusDay(1000)
        ..setStartingStats(20, 10, 14)
        ..setStatsPerLevel(3.2, 1.5, 1.3)
        ..setPrimaryAttribute("STR")
        ..setHitPointsRegenerationRate(1.5)
        ..setManaRegeneration(1.5)
        ..setAnimationCastPoint(0.)
        ..setAnimationSpeed(185., 185.)
        ..setModelFile(Units.catapult1)
        ..setElevationSample(4, 50.)
        ..setSelectionScale(2.75)
        ..setArtSpecial("")
        ..setIcon(Icons.bTNDemolisher)
        ..setTintingColor(COLOR_WHITE.withoutAlpha())
        ..setShadowImageSize(280.)
        ..setShadowImageCenter(110.)
        ..setProjectileImpactZ(60.)
        ..setOrientationInterpolation(1)
        ..setProjectileLaunch(0., 0., 60.)
        ..setProjectileLaunchZSwimming(0.)
        ..setMaximumRotation(45., 45.)
        ..setDeathTimeseconds(3.34)
        ..setScalingValue(1.)
        ..setPropulsionWindowdegrees(30.)
        ..setSpeedBase(285)
        ..setTurnRate(0.4)
        ..setCollisionSize(40.)
        ..setUnitSoundSet(Soundsets.catapult)
        ..setProperNames("Mazuru")
        ..setName("Demolisher")

    DARK_ASSASSIN
        ..setAcquisitionRange(500.)
        ..setAttack1Range(750)
        ..setAttack1Animation(0.33, 0.64)
        ..setAttack1ProjectileArc(0.)
        ..setAttack1Damage(65, 1, 3)
        ..setAttack1ProjectileArt("")
        ..setAttack1AttackType(AttackType.Normal)
        ..setAttack1ProjectileSpeed(0)
        ..setAttack1AreaofEffect(0, 0, 0)
        ..setAttack1WeaponSound(WeaponSound.MetalMediumChop)
        ..setArmorSoundType(ArmorSoundType.Flesh)
        ..setSightRadiusDay(800)
        ..setStartingStats(24, 11, 15)
        ..setStatsPerLevel(3., 1.5, 1.5)
        ..setPrimaryAttribute("STR")
        ..setHitPointsRegenerationRate(1.5)
        ..setManaRegeneration(1.5)
        ..setAnimationCastPoint(0.)
        ..setAnimationSpeed(210., 210.)
        ..setModelFile(Units.dranaiWhite1)
        ..setElevationSample(0, 20.)
        ..setSelectionScale(1.25)
        ..setArtSpecial(Objects.humanLargeDeathExplode)
        ..setIcon(Icons.bTNDranai)
        ..setTintingColor(COLOR_WHITE.withoutAlpha())
        ..setShadowImageSize(140.)
        ..setShadowImageCenter(50.)
        ..setProjectileImpactZ(60.)
        ..setOrientationInterpolation(0)
        ..setProjectileLaunch(0., 0., 60.)
        ..setProjectileLaunchZSwimming(0.)
        ..setMaximumRotation(10., 10.)
        ..setDeathTimeseconds(2.)
        ..setScalingValue(1.15)
        ..setPropulsionWindowdegrees(60.)
        ..setSpeedBase(300)
        ..setTurnRate(0.6)
        ..setCollisionSize(32.)
        ..setUnitSoundSet(Soundsets.dranai)
        ..setProperNames("Kajind")
        ..setName("Draenei Dark Assassin")

init
    
    HeroType.roots[1] = Icons.bTNDemolisher
    HeroType.roots[2] = Icons.bTNDranai
    HeroType.roots[3] = Icons.bTNAkama
    HeroType.roots[4] = Icons.bTNDranaiMage
    HeroType.roots[5] = Icons.bTNDranaiAkama
    HeroType.roots[6] = Icons.bTNThunderLizardSalamander
    HeroType.roots[7] = Icons.bTNSpiritWolf
    HeroType.roots[8] = Imports.bTNDraeneiFemaleHuntress
    HeroType.roots[9] = Imports.bTNDraeneiDestroyer2
    HeroType.roots[10] = Imports.bTNZealot
    HeroType.roots[11] = Imports.bTNVelen
    HeroType.roots[12] = Icons.bTNFelGuard
    HeroType.roots[13] = Icons.bTNFelGuardBlue
    HeroType.roots[14] = Icons.bTNVoidWalker
    HeroType.roots[15] = Icons.bTNDoomGuard
    HeroType.roots[16] = Icons.bTNEredarWarlockPurple
    HeroType.roots[17] = Icons.bTNInfernalFlameCannon
    HeroType.roots[18] = Icons.bTNBlueDemoness
    HeroType.roots[19] = Icons.bTNDemoness
    HeroType.roots[20] = Icons.bTNPitLord
    HeroType.roots[21] = Imports.bTNPlateOfPlaneswalker
    HeroType.roots[22] = Icons.bTNChaosGrom
    HeroType.roots[23] = Icons.bTNLavaSpawn