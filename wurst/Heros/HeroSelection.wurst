package HeroSelection

import ClosureTimers
import ClosureForGroups
import Camera
import HashMap

import GeneratedValues
import ModeSelection
import Reset
import public HeroType
import initlater MyBoard

public rect actDrSpawn
public rect actDeSpawn

public force canPick = CreateForce()

public HashMap<int, unit> heroModel

let seeDraenei = createVision(DEMON, Rects.selectorDraenei, true)
let seeDemons = createVision(DRAENEI, Rects.selectorDemon, true)
let herosToPick = CreateGroup()

int array clicks
boolean array youSelected
unit array arrow

init
    onModesSelected(() -> begin
        if whatMode[4] == TRAITOR
            seeDraenei.start()
            seeDemons.start()

        actDrSpawn = Rects.respawn1
        actDeSpawn = Rects.respawn2

        forUnitsInRect(bj_mapInitialPlayableArea, u -> begin
            if u.isType(UNIT_TYPE_HERO) and ((u.getOwner() == DRAENEI and Rects.selectorDraenei.contains(u.getPos())) or (u.getOwner() == DEMON and Rects.selectorDemon.contains(u.getPos())))
                u.pause()
                SuspendHeroXP(u, true)
                u.setInvulnerable(true)
                herosToPick.add(u)

            let id = u.getTypeId()

            if whatMode[5] == LEVELING
                if id == HeroType.get(id).getL()
                    heroModel.put(id, u)
                else if id == HeroType.get(id).getNL()
                    heroModel.put(id, u.replace(id))
            else if whatMode[5] == NOT_LEVELING
                heroModel.get(id).replace(HeroType.get(id).getNL())
        end)
    end)

    onReset(false, () -> begin
        seeDraenei.stop()
        seeDemons.stop()
    end)

    forUnitsInRect(bj_mapInitialPlayableArea, u -> begin
        if Rects.selectorDraenei.contains(u.getPos()) or Rects.selectorDemon.contains(u.getPos())
            u.setInvulnerable(true)
    end)

    createVision(DRAENEI, Rects.selectorDraenei, true).start()
    createVision(DEMON, Rects.selectorDemon, true).start()
        
    // If you select
    trigger t = CreateTrigger()
    for i = 1 to 11
        t.registerPlayerUnitEvent(players[i], EVENT_PLAYER_UNIT_SELECTED, null)
    t..addCondition(Condition(() -> begin
        return canPick.has(GetTriggerPlayer()) and herosToPick.has(GetTriggerUnit())
    end))
     ..addAction(() -> begin
        let heroSelected = GetTriggerUnit()
        let playerSelector = GetTriggerPlayer()
        if not (whatMode[4] == NORMAL_PICK and playerSelector.isEnemyOf(heroSelected.getOwner()))
            let id = playerSelector.getId()

            if clicks[id] == 2
                let c = playerSelector.getNumber()
                let temp = heroSelected.getTypeId()
                let typ = HeroType.get(temp)

                hero[c] = createUnit(playerSelector, temp, heroSelected.getPos(), UNIT_FACING)
                if whatMode[5] == NOT_LEVELING
                    SuspendHeroXP(hero[c], true)
                /* TODO
                if udg_Sky_Gem_Power.has(playerSelector)
                    hero[c].addAbility('A02J')
                    udg_Sky_Gem_Ability = hero[c]
                    udg_Sky_Gem_Visibilidad = createVision(playerSelector, udg_Sky_Gem_Ability.getPos(), 1800, true)..start()*/
                if whatMode[5] == LEVELING
                    if (typ == CACIQUE or typ == MAIDEN_OF_PAIN) and THE_DRAENEI.has(playerSelector) //TODO and not udg_Ya_pueden
                        hero[c].addAbility('A06B')
                        DisplayTimedTextToPlayer(playerSelector, 0, 0, bj_TEXT_DELAY_ALWAYSHINT, "To prevent skipping missions,Teleport was changed for Speed Increase.")
                        if localPlayer == playerSelector
                            bj_questHintSound.play()
                else
                    if (typ == CACIQUE or typ == MAIDEN_OF_PAIN) and THE_DRAENEI.has(playerSelector) //TODO and not udg_Ya_pueden
                        hero[c].removeAbility('A00F')
                        hero[c].addAbility('A022')
                        DisplayTimedTextToPlayer(playerSelector, 0, 0, bj_TEXT_DELAY_ALWAYSHINT, "To prevent skipping missions,Teleport was changed for Speed Increase.")
                        if localPlayer == playerSelector
                            bj_questHintSound.play()
                table.setItemIcon(1, row[c], HeroType.roots[HeroType.get(hero[c])])
                /* TODO
                if udg_Primera_persona
                    udg_Unidad_que_sigo[c] = hero[c]
                    udg_Distancia_al_objetivo[c] = 1024.00*/

                canPick.remove(playerSelector)

                vec2 pos
                if THE_DRAENEI.has(playerSelector)
                    pos = actDrSpawn.randomPoint()
                else
                    pos = actDeSpawn.randomPoint()
                hero[c].setPos(pos)
                if localPlayer == playerSelector
                    panCameraToTimed(pos, 0.00)
                playerSelector.selectSingle(hero[c])
                if whatMode[5] == LEVELING
                    heroSelected.hide()
            else
                clicks[id]++
            
            if not youSelected[id]
                youSelected[id] = true
                arrow[id] = createUnit(playerSelector, 'ufro', heroSelected.getPos(), UNIT_FACING)
            
            doAfter(0.95, () -> begin
                if clicks[id] > 0
                    clicks[id]--
            end)
    end)

    // If you deselect
    t = CreateTrigger()
    for i = 1 to 11
        t.registerPlayerUnitEvent(players[i], EVENT_PLAYER_UNIT_DESELECTED, null)
    t..addCondition(Condition(() -> herosToPick.has(GetTriggerUnit())))
    ..addAction(() -> begin
        let id = GetTriggerPlayer().getId()
        youSelected[id] = false
        if arrow[id] != null
            arrow[id].remove()
        clicks[id] = 0
    end)
    
