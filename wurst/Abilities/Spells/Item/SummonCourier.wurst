package SummonCourier

import AbilityData
import PlayerData
import HeroSelection

import HashList
import ClosureEvents

import BountyController

public constant COURIER = compiletime(UNIT_ID_GEN.next())
public constant SUMMON_COURIER_SPELL = compiletime(ABIL_ID_GEN.next())
public constant COURIER_INV = compiletime(ABIL_ID_GEN.next())

let GO_TO_HERO = compiletime(UNIT_ID_GEN.next())
let GO_TO_BASE = compiletime(UNIT_ID_GEN.next())
let DROP_ITEMS = compiletime(UNIT_ID_GEN.next())
let bannedItems = new HashList<int>()

public function int.courierBanItem()
    bannedItems.add(this)

init
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM, () -> begin
        if EventData.getManipulatingUnit().getTypeId() == COURIER and
            bannedItems.has(EventData.getManipulatedItem().getTypeId())

            EventData.getManipulatedItem().remove()
            message("error", "That would be easy", EventData.getManipulatingUnit().getOwner())
    end)
    EventListener.add(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, () -> begin
        if EventData.getOrderedUnit().getTypeId() == COURIER and
            bannedItems.has(EventData.getOrderTargetItem().getTypeId())

            EventData.getOrderedUnit().issueTargetOrderById(Orders.attack, EventData.getOrderedUnit())
            message("error", "That would be easy", EventData.getOrderedUnit().getOwner())
    end)
    EventListener.add(EVENT_PLAYER_UNIT_SELL, () -> begin
        let caster = EventData.getSellingUnit()
        if caster.getTypeId() == COURIER
            let u = EventData.getSoldUnit()
            let typ = u.getTypeId()

            if typ == GO_TO_HERO
                let i = u.getOwner().getNumber()
                if hero[i].isAlive()
                    caster.issueTargetOrderById(Orders.smart, hero[i])
            else if typ == GO_TO_BASE
                caster.issuePointOrderById(Orders.move, (THE_DRAENEI.has(u) ? actDrSpawn : actDeSpawn).getCenter())
            else if typ == DROP_ITEMS
                for m in caster.inventory()
                    caster.removeItem(m)
            u.remove()
    end)
    EventListener.add(EVENT_PLAYER_UNIT_DEATH, () -> begin
        let d = EventData.getDyingUnit()
        if d.getTypeId() == COURIER
            let p = EventData.getKillingUnit().getOwner()
            printTimed("{0} killed {1}'s courier".format(p.getName(), d.getOwner().getName()), 10.)
            if THE_DRAENEI.has(p)
                for i = 1 to 5
                    new Bounty().run(100, hero[i], playerM(i), hero[i].isAlive(), false)
            else if THE_DEMONS.has(p)
                for i = 6 to 10
                    new Bounty().run(100, hero[i], playerM(i), hero[i].isAlive(), false)
    end)

function UnitDefinition.general()
    this
        ..setStockReplenishInterval(1)
        ..setStockMaximum(1)
        ..setNormalAbilities("")
        ..setUnitSoundSet("")


@compiletime function gen()
    new AbilityDefinitionInventory(COURIER_INV)
        ..setCanUseItems(1, false)

    new UnitDefinition(COURIER, 'nzep')
        ..setUnitClassification("peon")
        ..setHitPointsMaximumBase(200)
        ..setSelectionScale(0.75)
        ..setShadowImageHeight(80.)
        ..setShadowImageWidth(80.)
        ..setShadowImageCenterX(40.)
        ..setShadowImageCenterY(40.)
        ..setProjectileImpactZ(30.)
        ..setScalingValue(0.5)
        ..setNormalAbilities(commaList('Apiv', COURIER_INV))
        ..setUnitsSold(commaList(GO_TO_HERO, GO_TO_BASE, DROP_ITEMS))
        ..setSpeedBase(522)
        ..setCollisionSize(24.)
        ..setName("Courier")
    
    new UnitDefinition(GO_TO_HERO, 'nalb')
        ..general()
        ..setButtonPositionX(0)
        ..setButtonPositionY(2)
        ..setIconGameInterface(Icons.bTNRiderlessHorse)
        ..setHotkey("Q")
        ..setTooltipBasic("[|cffffcc00Q|r] Go to hero")
        ..setTooltipExtended("Orders the courier to go to the position of your hero.")
        ..setName("Go to hero")
    
    new UnitDefinition(GO_TO_BASE, 'nalb')
        ..general()
        ..setButtonPositionX(1)
        ..setButtonPositionY(2)
        ..setIconGameInterface(Icons.bTNUndeadAirBarge)
        ..setHotkey("W")
        ..setTooltipBasic("[|cffffcc00W|r] Go to base")
        ..setTooltipExtended("Orders the courier to go to the spawnpoint of your team.")
        ..setName("Go to base")

    new UnitDefinition(DROP_ITEMS, 'nalb')
        ..general()
        ..setIconGameInterface(Icons.bTNUnLoad)
        ..setButtonPositionX(2)
        ..setButtonPositionY(2)
        ..setHotkey("E")
        ..setTooltipBasic("[|cffffcc00E|r] Drop items")
        ..setTooltipExtended("Drop the items in the inventory.")
        ..setName("Drop items")
    
    new AbilityDefinitionFigurineUrsaWarrior(SUMMON_COURIER_SPELL)
        ..setSummonUnitType1(1, COURIER.toRawCode())
        ..setDurationHero(1, 0)
        ..setDurationNormal(1, 0)
        ..setIconNormal(Icons.bTNGoblinZeppelin)
        ..setName("Summon Courier")