package Berserk

import AbilityData

public constant BERSERK_NL = compiletime(ABIL_ID_GEN.next())
public constant BERSERK_L = compiletime(ABIL_ID_GEN.next())
public constant BERSERK_S = compiletime(ABIL_ID_GEN.next())

// General
let DURATION = 8.
let EXTRA_DMG = 0.2
let CD = 24.
// Not leveling
let ATTACK_SPEED_NL = [0.35, 0.8]
let MOVE_SPEED_NL = [0.4, 0.5]
let MANA_NL = 0
// Leveling
let ATTACK_SPEED_L = [0.25, 0.5, 0.75, 1.]
let MOVE_SPEED_L = [0.15, 0.3, 0.45, 0.6]
let MANA_L = 25

function AbilityDefinitionBerserk.general()
    this
        ..presetDurationHero(lvl -> DURATION)
        ..presetDurationNormal(lvl -> DURATION)
        ..presetDamageTakenIncrease(lvl -> EXTRA_DMG)
        ..tooltipStartListen()
        ..setHotkey("W")
        ..setName("Berserk")
        ..addTooltipProperty("Target Type", lvl -> Targettype.NONE castTo int)
        ..addTooltipProperty("Duration", lvl -> DURATION)
        ..presetCooldown(lvl -> CD)
        ..presetIcon(Icons.bTNBerserkForTrolls)

@compiletime function gen()
    new AbilityDefinitionBerserk(BERSERK_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Causes this unit to attack and move faster for " + DURATION.toString(0) + " seconds, but the hero takes " + (EXTRA_DMG * 100.).toString() + "% extra damage."))
        ..setHeroAbility(false)
        ..general()
        ..presetLevels(2)
        // Stats
        ..presetAttackSpeedIncrease(lvl -> ATTACK_SPEED_NL[lvl-1])
        ..presetMovementSpeedIncrease(lvl -> MOVE_SPEED_NL[lvl-1])
        ..presetManaCost(lvl -> MANA_NL)
        // Audiovisual
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Not leveling)")
    
    new AbilityDefinitionBerserk(BERSERK_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Causes this unit to attack and move faster for " + DURATION.toString(0) + " seconds, but the hero takes " + (EXTRA_DMG * 100.).toString() + "% extra damage."))
        ..setRequiredLevel(1)
        ..setHeroAbility(true)
        ..general()
        ..presetLevels(4)
        // Stats
        ..presetAttackSpeedIncrease(lvl -> ATTACK_SPEED_L[lvl-1])
        ..presetMovementSpeedIncrease(lvl -> MOVE_SPEED_L[lvl-1])
        ..presetManaCost(lvl -> MANA_L)
        // Audiovisual
        // Tooltip
        ..tooltipStopListen()
        .setEditorSuffix("(Leveling)")

    new AbilityDefinitionBerserk(BERSERK_S)
        ..presetLevels(6)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Berserk")
        ..setHotkey("F")
        // Stats
        ..presetManaCost(lvl -> lvl < 3 ? MANA_NL : MANA_L)
        ..presetAttackSpeedIncrease(lvl -> lvl < 3 ? ATTACK_SPEED_NL[lvl-1] : ATTACK_SPEED_L[lvl-3])
        ..presetMovementSpeedIncrease(lvl -> lvl < 3 ? MOVE_SPEED_NL[lvl-1]: MOVE_SPEED_L[lvl-3])
        ..presetTooltipNormalExtended(lvl -> begin
            real value1
            real value2
            if lvl < 3
                value1 = ATTACK_SPEED_NL[lvl-1]
                value2 = MOVE_SPEED_NL[lvl-1]
            else
                value1 = ATTACK_SPEED_L[lvl-3]
                value2 = MOVE_SPEED_L[lvl-3]
            return "Causes this unit to attack {0} and move {1} faster for {2} seconds, but the hero takes {3}% extra damage.".format(value1.toString(), value2.toString(), DURATION.toString(), (EXTRA_DMG*100).toInt().toString())
        end)
        ..setEditorSuffix("(Stealed)")