package Rencarnation

import AbilityData

public constant REENCARNATION_NL = compiletime(ABIL_ID_GEN.next())
public constant REENCARNATION_L = compiletime(ABIL_ID_GEN.next())

// General
// Not leveling
let CD_NL = 160.
let MANA_NL = 75
// Leveling
let CD_L = [200., 100.]
let MANA_L = 100

function AbilityDefinitionTaurenChieftainReincarnation.general()
    this
        ..setRequirements("")
        ..presetCastingTime(lvl -> 3.)
        ..tooltipStartListen()
        ..setHotkey("R")
        ..setName("Rencarnation")
        ..addTooltipProperty("Target Type", lvl -> Targettype.PASSIVE castTo int)
        ..presetIcon(Imports.pASAkamaResurrection)

@compiletime function gen()
    new AbilityDefinitionTaurenChieftainReincarnation(REENCARNATION_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("When the hero dies, it will be resurrected."))
        ..presetLevels(1)
        ..presetButtonPosNormal(3, 2)
        ..setHeroAbility(false)
        ..general()
        // Stats
        ..presetCooldown(lvl -> CD_NL)
        ..presetManaCost(lvl -> MANA_NL)
        // Audiovisual
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Not leveling)")
    
    new AbilityDefinitionTaurenChieftainReincarnation(REENCARNATION_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("When the hero dies, it will be resurrected."))
        ..presetLevels(2)
        ..setRequiredLevel(6)
        ..setLevelSkipRequirement(6)
        ..presetButtonPosNormal(3, 2)
        ..presetButtonPosResearch(3, 0)
        ..setHeroAbility(true)
        ..general()
        // Stats
        ..presetCooldown(lvl -> CD_L[lvl-1])
        ..presetManaCost(lvl -> MANA_L)
        // Audiovisual
        ..setIconResearch(Imports.bTNAkamaResurrection)
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Leveling)")