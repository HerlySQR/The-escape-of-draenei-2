package CryingSouls

import AbilityData

public constant CRYING_SOULS_NL = compiletime(ABIL_ID_GEN.next())
public constant CRYING_SOULS_L = compiletime(ABIL_ID_GEN.next())
public constant CRYING_SOULS_S = compiletime(ABIL_ID_GEN.next())

constant CRYING_SOULS_BUFF = compiletime(BUFF_ID_GEN.next())

// General
let AREA = 325.
let MANA = 15
let MANA_PER_SEC = 31.
let TARGETS = "air,ground,enemy,neutral,organic"
// Not leveling
let DMG_NL = 70.
// Leveling
let DMG_L = [85., 110.]

function AbilityDefinitionDemonHunterImmolation.general()
    this
        ..setHeroAbility(false)
        ..presetTargetsAllowed(lvl -> TARGETS)
        ..presetBufferManaRequired(lvl -> 0.)
        ..presetBuffs(lvl -> CRYING_SOULS_BUFF.toRawCode())
        ..tooltipStartListen()
        ..setHotkey("R")
        ..setName("Crying Souls")
        ..addTooltipProperty("Target Type", lvl -> Targettype.NONE castTo int)
        ..presetAreaofEffect(lvl -> AREA)
        ..presetManaCost(lvl -> MANA)
        ..presetManaDrainedperSecond(lvl -> MANA_PER_SEC)
        // Audiovisual
        ..presetIcon(Icons.bTNDoom)
        ..setIconTurnOff(Icons.bTNCancel)
        ..presetTooltipTurnOffExtended(lvl -> "Deactivate the Wailing of souls to stop mana consumption.")

@compiletime function gen()
    new AbilityDefinitionDemonHunterImmolation(CRYING_SOULS_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("While activated, approaching souls will receive damage per second."))
        ..presetLevels(1)
        ..general()
        // Stats
        ..presetDamageperInterval(lvl -> DMG_NL)
        // Tooltip
        ..tooltipStopListen()
        ..presetTooltipTurnOff(lvl -> "[|cffffcc00R|r] Disable Crying Souls")
        ..setEditorSuffix("(Not leveling)")
    
    new AbilityDefinitionDemonHunterImmolation(CRYING_SOULS_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("While activated, approaching souls will receive damage per second."))
        ..presetLevels(2)
        ..setRequiredLevel(6)
        ..setLevelSkipRequirement(6)
        ..general()
        // Stats
        ..presetDamageperInterval(lvl -> DMG_L[lvl-1])
        // Tooltip
        ..tooltipStopListen()
        ..presetTooltipTurnOff(lvl -> "[|cffffcc00R|r] Disable Crying Souls")
        .setEditorSuffix("(Leveling)")

    new AbilityDefinitionDemonHunterImmolation(CRYING_SOULS_S)
        ..presetLevels(3)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Crying Souls")
        ..setHotkey("F")
        // Stats
        ..presetDamageperInterval(lvl -> lvl < 2 ? DMG_NL : DMG_L[lvl - 2])
        ..presetTooltipNormalExtended(lvl -> begin
            real value
            if lvl < 2
                value = DMG_NL
            else
                value = DMG_L[lvl - 2]
            return "While activated, approaching souls will receive {0} damage per second.\nDrains {1} mana per second.".format(value.toString(0), MANA_PER_SEC.toString())
        end)
        ..presetTooltipTurnOff(lvl -> "[|cffffcc00F|r] Disable Crying Souls")
        ..setEditorSuffix("(Stealed)")
        ..setName("Ult Crying Souls")
    
    new BuffDefinition(CRYING_SOULS_BUFF, 'BEim')
        ..setArtSpecial(1, Abilities.doomDeath)
        ..setArtTarget(1, "")
        ..setSpecialAttachmentPoint(1, "origin")
        ..setIcon(Icons.bTNDoom)
        ..setName(1, "Crying Souls")
        ..setTooltipNormal(1, "Crying Souls")
        ..setTooltipNormalExtended(1, "When a unit approaches, it will take damage.")