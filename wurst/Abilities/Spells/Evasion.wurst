package Evasion

import AbilityData

public constant EVASION_NL = compiletime(ABIL_ID_GEN.next())
public constant EVASION_L = compiletime(ABIL_ID_GEN.next())

// General
// Not leveling
let CHANCE_NL = [0.15, 0.25]
// Leveling
let CHANCE_L = [0.1, 0.2, 0.3, 0.4]

function AbilityDefinitionDemonHunterEvasion.general()
    this
        ..tooltipStartListen()
        ..setName("Evasion")
        ..addTooltipProperty("Target Type", lvl -> Targettype.PASSIVE castTo int)

@compiletime function gen()
    new AbilityDefinitionDemonHunterEvasion(EVASION_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("It gives a chance of avoiding an attack."))
        ..presetLevels(2)
        ..presetButtonPosNormal(2, 2)
        ..setHeroAbility(false)
        // Stats
        ..presetChancetoEvade(lvl -> CHANCE_NL[lvl-1])
        // Audiovisual
        // Tooltip
        .tooltipStopListen()
    
    new AbilityDefinitionDemonHunterEvasion(EVASION_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("It gives a chance of avoiding an attack."))
        ..presetLevels(4)
        ..setRequiredLevel(1)
        ..presetButtonPosNormal(2, 2)
        ..presetButtonPosResearch(2, 0)
        ..setHeroAbility(false)
        // Stats
        ..presetChancetoEvade(lvl -> CHANCE_L[lvl-1])
        // Audiovisual
        // Tooltip
        .tooltipStopListen()