package HardenedSkin

import AbilityData

public constant HARDENED_SKIN_NL = compiletime(ABIL_ID_GEN.next())
public constant HARDENED_SKIN_L = compiletime(ABIL_ID_GEN.next())

// General
let TARGETS = "enemy,ally"
let MIN_DMG = 3.
// Not leveling
let IGNORED_DMG_NL = [12., 20.]
// Leveling
let IGNORED_DMG_L = [12., 20., 28., 36.]

function AbilityDefinitionHardenedSkin.general()
    this
        ..presetMinimumDamage(lvl -> MIN_DMG)
        ..presetChancetoReduceDamage(lvl -> 100.)
        ..presetIncludeMeleeDamage(lvl -> true)
        ..presetIncludeRangedDamage(lvl -> true)
        ..presetTargetsAllowed(lvl -> TARGETS)
        ..setRequirements("")
        ..tooltipStartListen()
        ..setName("Hardened skin")
        ..addTooltipProperty("Target Type", lvl -> Targettype.PASSIVE castTo int)

@compiletime function gen()
    new AbilityDefinitionHardenedSkin(HARDENED_SKIN_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Reduce all attacks. Attacks cannot be reduced by more than one damage of " + MIN_DMG.toString(0) + "."))
        ..presetLevels(2)
        ..presetButtonPosNormal(2, 2)
        ..setHeroAbility(false)
        ..general()
        // Stats
        ..presetIgnoredDamage(lvl -> IGNORED_DMG_NL[lvl-1])
        // Audiovisual
        // Tooltips
        .tooltipStopListen()
    
    new AbilityDefinitionHardenedSkin(HARDENED_SKIN_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Reduce all attacks. Attacks cannot be reduced by more than one damage of " + MIN_DMG.toString(0) + "."))
        ..presetLevels(4)
        ..presetButtonPosNormal(2, 2)
        ..presetButtonPosResearch(2, 0)
        ..setIconResearch(Icons.bTNHardenedSkin)
        ..setHeroAbility(true)
        ..general()
        // Stats
        ..presetIgnoredDamage(lvl -> IGNORED_DMG_L[lvl-1])
        // Audiovisual
        // Tooltips
        .tooltipStopListen()