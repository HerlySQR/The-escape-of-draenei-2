package DisableSphere

import AbilityData

public constant DISABLE_SPHERE_NL = compiletime(ABIL_ID_GEN.next())
public constant DISABLE_SPHERE_L = compiletime(ABIL_ID_GEN.next())
public constant DISABLE_SPHERE_S = compiletime(ABIL_ID_GEN.next())

constant DISABLE_SPHERE_SILENCE = compiletime(ABIL_ID_GEN.next())
constant DISABLE_SPHERE_BUFF = compiletime(BUFF_ID_GEN.next())

// General
let CD = 35.
let AREA = 300.
let RANGE = 800.
let DURATION = 5.
// Not leveling
let MANA_NL = 130
let DMG_NL = 200.
// Leveling
let MANA_L = [130, 175]
let DMG_L = [200., 350.]

init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> begin
        if EventData.getSpellAbilityId() == DISABLE_SPHERE_NL
            let caster = EventData.getSpellAbilityUnit()
            let target = EventData.getSpellTargetPos()
            let m = new Missiles(caster.getPos3with(50.), target.withZ(50.))
            m.setModel(Imports.orbDragonX)
            m.source = caster
            m.owner = caster.getOwner()
            m.setSpeed(1250.)
            m.setScale(3.5)
            m.damage = DMG_NL
            m.onFinish(() -> begin
                InstantDummyCaster.castPoint(m.owner, DISABLE_SPHERE_SILENCE, 1, Orders.silence, target, target)
                forUnitsInRange(target, AREA, u -> begin
                    if m.owner.isEnemyOf(u.getOwner()) and not u.isType(UNIT_TYPE_STRUCTURE) and not u.isType(UNIT_TYPE_MAGIC_IMMUNE)
                        m.source.damageTarget(u, m.damage, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_FORCE)
                end)
                return true
            end)
            doAfter(1.) -> 
                m.launch()
    end)

function ChannelAbilityPreset.general()
    this
        ..presetBaseOrderID(lvl -> "silence")
        ..presetOption(Option.TARGETIMAGE, true)
        ..presetFollowThroughTime(lvl -> 0.75)
        ..setAnimationNames("spell,channel")
        ..tooltipStartListen()
        ..setHotkey("R")
        ..setName("Disable Sphere")
        ..presetTargetTypes(Targettype.POINT)
        ..presetCooldown(lvl -> CD)
        ..presetCastRange(lvl -> RANGE)
        ..presetAreaofEffect(lvl -> AREA)
        // Audiovisual
        ..presetIcon(Imports.bTNStormSphere)

@compiletime function gen()
    new ChannelAbilityPreset(DISABLE_SPHERE_NL, 1, true, new AbilityTooltipGenerator("The zealot creates an orb that when colides with the floor causes a damage and disarm and silence the affected enemy units.|nLasts " + DURATION.toString(0) + " seconds."))
        ..setHeroAbility(false)
        // Stats
        ..addTooltipProperty("Damage", lvl -> DMG_NL)
        ..presetManaCost(lvl -> MANA_NL)
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Not leveling)")
    
    new ChannelAbilityPreset(DISABLE_SPHERE_L, 2, true, new AbilityTooltipGenerator("The zealot creates an orb that when colides with the floor causes a damage and disarm and silence the affected enemy units.|nLasts " + DURATION.toString(0) + " seconds."))
        ..setRequiredLevel(6)
        ..setLevelSkipRequirement(6)
        ..setHeroAbility(true)
        // Stats
        ..addTooltipProperty("Damage", lvl -> DMG_L[lvl-1])
        ..presetManaCost(lvl -> MANA_L[lvl-1])
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Leveling)")

    new ChannelAbilityPreset(DISABLE_SPHERE_S, 3, true)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Disable Sphere")
        ..setHotkey("F")
        // Stats
        ..presetManaCost(lvl -> lvl < 2 ? MANA_NL : MANA_L[lvl-2])
        ..presetTooltipNormalExtended(lvl -> begin
            real value
            if lvl < 2
                value = DMG_NL
            else
                value = DMG_L[lvl-2]
            return "The zealot creates an orb that when colides with the floor causes {0} of damage and disarm and silence the affected enemy units.\nLasts {1} seconds.".format(value.toString(0), DURATION.toString(0))
        end)
        ..setEditorSuffix("(Stealed)")
        ..setName("Ult Disable Sphere")

    new AbilityDefinitionSilenceCreep(DISABLE_SPHERE_SILENCE)
        ..presetLevels(1)
        ..setAttacksPrevented(1, 15)
        ..setDurationHero(1, DURATION)
        ..setDurationNormal(1, DURATION)
        ..setBuffs(1, DISABLE_SPHERE_BUFF.toRawCode())
        ..setName("Silence")
        ..setEditorSuffix("(Disable Sphere)")
        .setDummyAbility()
    
    new BuffDefinition(DISABLE_SPHERE_BUFF, 'BHad')
        ..setIcon(Imports.bTNStormSphere)
        ..setArtTarget(1, "")
        ..setName(1, "Disable Sphere")
        ..setTooltipNormal(1, "Disable Sphere")
        .setTooltipNormalExtended(1, "This unit has Power of light: it has a huge  increase in armor and regeneration.")