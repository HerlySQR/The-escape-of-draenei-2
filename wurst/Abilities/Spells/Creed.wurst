package Creed

import AbilityData
import MoveSpeedX
import UnitIndexer

public constant CREED_NL = compiletime(ABIL_ID_GEN.next())
constant CREED_BUFF = compiletime(createDummyBuffObject("Creed", "This unit is slowed: its movement speed has been reduced.", Imports.bTNSickle))

// General
let SLOW = 0.75
let DURATION = 3.
// Not Leveling
let CD_NL = 20.
let EXTRA_DMG_NL = 75.
// Internal
let believers = CreateGroup()
let availableMap = new HashMap<unit, boolean>()
let effMap = new HashMap<unit, effect>()
let cbMap = new HashMap<unit, CallbackSingle>()

function addCreed(unit caster)
    availableMap.put(caster, false)
    cbMap.put(caster, doAfter(CD_NL, () -> begin
        availableMap.put(caster, true)
        effMap.put(caster, caster.addEffect(Abilities.illidanMissile, "weapon"))
        cbMap.remove(caster)
    end))

init
    DamageEvent.addUnreducedListener(() -> begin
        let caster = DamageEvent.getSource()
        let target = DamageEvent.getTarget()
        if believers.has(caster)
            and availableMap.get(caster)
            and not target.isType(UNIT_TYPE_STRUCTURE)
            and not target.isType(UNIT_TYPE_MECHANICAL)
            and not target.isType(UNIT_TYPE_MAGIC_IMMUNE)
            and not DamageEvent.isSpell()
            target.scaleSpeed("creed", SLOW)
            target.addBuff(CREED_BUFF, DURATION, () -> target.removeSpeedBuff("creed"))
            target.flashEffect(Objects.bloodElfSpellThiefBlood, "chest")
            effMap.get(caster).destr()
            effMap.remove(caster)
            DamageEvent.addAmount(EXTRA_DMG_NL)
            addCreed(caster)
    end)
    onUnitIndex(() -> begin
        if getIndexingUnit().hasAbility(CREED_NL)
            addCreed(getIndexingUnit())
    end)
    onUnitDeindex(() -> begin
        if believers.has(getIndexingUnit())
            let d = getIndexingUnit()
            believers.remove(d)
            availableMap.remove(d)
            if effMap.has(d)
                effMap.get(d).destr()
                effMap.remove(d)
            if cbMap.has(d)
                destroy cbMap.get(d)
                cbMap.remove(d)
    end)

@compiletime function gen()
    new AbilityDefinitionHardenedSkin(CREED_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("The Zealot's faith makes it capable of an attack that deals extra damage and slows the enemy by " + (1. - SLOW).toString(0) + " for " + DURATION.toString(0) + " seconds."))
        ..setLevels(1)
        ..presetButtonPosNormal(2, 2)
        ..setHeroAbility(false)
        ..presetIgnoredDamage(lvl -> 0.)
        ..presetMinimumDamage(lvl -> 0.)
        ..presetChancetoReduceDamage(lvl -> 0.)
        ..presetIncludeMeleeDamage(lvl -> false)
        ..presetIncludeRangedDamage(lvl -> false)
        ..setRequirements("")
        ..tooltipStartListen()
        ..setName("Creed")
        ..addTooltipProperty("Target Type", lvl -> Targettype.PASSIVE castTo int)
        // Stats
        ..addTooltipProperty("Extra damage", lvl -> EXTRA_DMG_NL)
        ..presetCooldown(lvl -> CD_NL)
        // Audiovisual
        ..presetIcon(Imports.pASSickle)
        // Tooltip
        .tooltipStopListen()