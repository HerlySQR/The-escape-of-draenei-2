package DemonicRain

import AbilityData

public constant DEMONIC_RAIN_NL = compiletime(ABIL_ID_GEN.next())
public constant DEMONIC_RAIN_L = compiletime(ABIL_ID_GEN.next())
public constant DEMONIC_RAIN_S = compiletime(ABIL_ID_GEN.next())

constant DEMONIC_RAIN_BUFF = compiletime(BUFF_ID_GEN.next())
constant DEMONIC_RAIN_EFF = 'X000'//compiletime(BUFF_ID_GEN.next())

// General
let DURATION = 20.
let CD = 140.
let AREA = 1000.
let INTERVAL = 0.9
let BUILD_REDUCTION = 0.2
// Not leveling
let MANA_NL = 200
let DMG_NL = 150.
// Leveling
let MANA_L = [200, 300]
let DMG_L = [200., 270.]
// Internal
let SOUND = new SoundDefinition(Sounds.doom, true, false)
SoundInstance varSound
var count = 0

init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> begin
        if abilityCond(DEMONIC_RAIN_NL, DEMONIC_RAIN_L, DEMONIC_RAIN_S).check
            if count == 0
                varSound = SOUND.play()
            count++
    end)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_ENDCAST, () -> begin
        if abilityCond(DEMONIC_RAIN_NL, DEMONIC_RAIN_L, DEMONIC_RAIN_S).check
            count--
            if count == 0
                varSound.snd.stop(false, true)
    end)

function AbilityDefinitionMoonPriestessStarfall.general()
    this
        ..presetDamageInterval(lvl -> INTERVAL)
        ..presetBuildingReduction(lvl -> BUILD_REDUCTION)
        ..presetBuffs(lvl -> DEMONIC_RAIN_BUFF.toRawCode())
        ..presetEffects(lvl -> DEMONIC_RAIN_EFF.toRawCode())
        ..presetDurationHero(lvl -> DURATION)
        ..tooltipStartListen()
        ..setHotkey("R")
        ..setName("Demonic Rain")
        ..presetAreaofEffect(lvl -> AREA)
        ..presetCooldown(lvl -> CD)
        ..presetDurationNormal(lvl -> DURATION)
        // Audiovisual
        ..presetIcon(Icons.bTNInfernalStone)
        ..setAnimationNames("slam,looping")

@compiletime function gen()
    new AbilityDefinitionMoonPriestessStarfall(DEMONIC_RAIN_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Flame waves of infernal stones will fall on units nearby of the sorcerer, causing damage, if the caster is stunned or makes an action, the spell stops."))
        ..presetLevels(1)
        ..setHeroAbility(false)
        ..general()
        // Stats
        ..presetDamageDealt(lvl -> DMG_NL)
        ..presetManaCost(lvl -> MANA_NL)
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Not leveling)")
    
    new AbilityDefinitionMoonPriestessStarfall(DEMONIC_RAIN_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Flame waves of infernal stones will fall on units nearby of the sorcerer, causing damage, if the caster is stunned or makes an action, the spell stops."))
        ..presetLevels(2)
        ..setRequiredLevel(6)
        ..setLevelSkipRequirement(6)
        ..setHeroAbility(true)
        ..general()
        // Stats
        ..presetDamageDealt(lvl -> DMG_L[lvl-1])
        ..presetManaCost(lvl -> MANA_L[lvl-1])
        // Tooltip
        ..tooltipStopListen()
        ..setEditorSuffix("(Leveling)")

    new AbilityDefinitionMoonPriestessStarfall(DEMONIC_RAIN_S)
        ..presetLevels(3)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Demonic Rain")
        ..setHotkey("F")
        // Stats
        ..presetDamageDealt(lvl -> lvl < 2 ? DMG_NL : DMG_L[lvl-2])
        ..presetManaCost(lvl -> lvl < 2 ? MANA_NL : MANA_L[lvl-2])
        ..presetTooltipNormalExtended(lvl -> begin
            real value
            if lvl < 2
                value = DMG_NL
            else
                value = DMG_L[lvl-2]
            return "Flame waves of infernal stones will fall on units nearby of the sorcerer, causing {0} of damage, if the caster is stunned or makes an action, the spell stops.".format(value.toString(0))
        end)
        ..setEditorSuffix("(Stealed)")
        ..setName("Ult Demonic Rain")
    
    new BuffDefinition(DEMONIC_RAIN_BUFF, 'AEsd')
        ..setArtTarget(1, Units.infernalBirth)
        ..setName(1, "Demonic Rain")
        ..setEditorSuffix(1, "(target)")
    /*
    new BuffDefinition(DEMONIC_RAIN_EFF, 'XEsf')
        ..setArtTarget(1, "")
        ..setName(1, "Demonic Rain")
        ..setEditorSuffix(1, "(effect)")*/