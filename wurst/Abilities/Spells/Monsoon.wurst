package Monsoon

import AbilityData
import MoveSpeedX

public constant MONSOON_NL = compiletime(ABIL_ID_GEN.next())
public constant MONSOON_L = compiletime(ABIL_ID_GEN.next())
public constant MONSOON_S = compiletime(ABIL_ID_GEN.next())

constant DUMMY_MONSOON = compiletime(ABIL_ID_GEN.next())
constant MONSOON_EFFECT = compiletime(BUFF_ID_GEN.next())

// General
let CD = 70.
let RANGE = 900.
let DURATION = 15.
let AREA = 400.
let SPEED = 0.4
// Not leveling
let DMG_NL = 150.
let MANA_NL = 150
// Leveling
let DMG_L = [200., 300.]
let MANA_L = [150, 200]
// Internal
let casters = CreateGroup()

init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> begin
        if abilityCond(MONSOON_NL, MONSOON_L, MONSOON_S).check
            casters.add(EventData.getSpellAbilityUnit())
    end)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_ENDCAST, () -> begin
        if abilityCond(MONSOON_NL, MONSOON_L, MONSOON_S).check
            casters.remove(EventData.getSpellAbilityUnit())
    end)
    DamageEvent.addUnreducedListener(() -> begin
        if casters.has(DamageEvent.getSource()) and DamageEvent.isSpell()
            let u = DamageEvent.getTarget()
            u.scaleSpeed("monsoon", SPEED)
            doAfter(1.) ->
                u.removeSpeedBuff("monsoon")
    end)

function AbilityDefinitionMonsoon.general()
    this.setAnimationNames("victory,spell,channel")
    this.setArtTarget(Abilities.monsoonRain)
    this.presetBuffs(lvl -> MONSOON_EFFECT.toRawCode())
    this.tooltipStartListen()
    this.setHotkey("R")
    this.setName("Monsoon")
    this.addTooltipProperty("Target Type", lvl -> Targettype.POINT castTo int)
    this.presetCooldown(lvl -> CD)
    this.presetCastRange(lvl -> RANGE)
    this.presetAreaofEffect(lvl -> AREA)
    this.presetDurationHero(lvl ->  DURATION)
    this.presetDurationNormal(lvl -> DURATION)
    // Audiovisual
    this.presetIcon(Imports.bTNdancingLightningGS)

@compiletime function gen()
    new AbilityDefinitionMonsoon(MONSOON_NL)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Summons a lightning storm to deal damage to enemy units slows the units a {0}.".format((1.-SPEED).toPercentage())))
        ..presetLevels(1)
        ..setHeroAbility(false)
        ..general()
        // Stats
        ..presetDamageDealt(lvl -> DMG_NL)
        ..presetManaCost(lvl -> MANA_NL)
        ..tooltipStopListen()
        ..setEditorSuffix("(Not leveling)")
    
    new AbilityDefinitionMonsoon(MONSOON_L)
        ..registerTooltipGenerator(new AbilityTooltipGenerator("Summons a lightning storm to deal damage to enemy units slows the units a {0}.".format((1.-SPEED).toPercentage())))
        ..presetLevels(2)
        ..setHeroAbility(true)
        ..setRequiredLevel(6)
        ..setLevelSkipRequirement(6)
        ..general()
        // Stats
        ..presetDamageDealt(lvl -> DMG_L[lvl-1])
        ..presetManaCost(lvl -> MANA_L[lvl - 1])
        ..tooltipStopListen()
        ..setEditorSuffix("(Leveling)")
    
    new AbilityDefinitionMonsoon(MONSOON_S)
        ..setLevels(3)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Monsoon")
        ..setHotkey("F")
        // Stats
        ..presetDamageDealt(lvl -> lvl < 2 ? DMG_NL : DMG_L[lvl - 2])
        ..presetManaCost(lvl -> lvl < 2 ? MANA_NL : MANA_L[lvl-2])
        ..presetTooltipNormalExtended(lvl -> "Summons a lightning storm to deal {0} damage to enemy units in a {1} AOE and slows the units a {2}.".format((lvl < 2 ? DMG_NL : DMG_L[lvl-2]).toString(0), AREA.toString(0), (1-SPEED).toPercentage()))
        ..setEditorSuffix("(Stealed)")
        .setName("Ult Monsoon")
    
    new BuffDefinition(MONSOON_EFFECT, 'ANmd')
        ..setName(1, "Monsoon")
        .setArtTarget(1, Imports.lightningsLong)