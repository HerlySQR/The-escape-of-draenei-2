package Charge

import AbilityData
import MoveSpeedX

public constant CHARGE_NL = compiletime(ABIL_ID_GEN.next())
public constant CHARGE_L = compiletime(ABIL_ID_GEN.next())
public constant CHARGE_S = compiletime(ABIL_ID_GEN.next())

// General
let CD = 10.
let RANGE = 1000.
let MANA = 70
let DMG = [50., 80., 110., 140.]
let SPEED = 600.
// Not leveling
// Internal
let targetMap = new HashMap<unit, unit>()
let runMap = new HashMap<unit, boolean>()
let casters = CreateGroup()
let INTERVAL = 0.05

init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> begin
        let data = abilityCond(CHARGE_NL, CHARGE_L, CHARGE_S)
        if data.check
            let caster = GetSpellAbilityUnit()
            let target = GetSpellTargetUnit()
            let eff = caster.addEffect(Imports.valiantChargeRoyal, "origin")
            let damage = DMG[data.lvl]
            var vision = createFogModifier(caster.getOwner(), FOG_OF_WAR_VISIBLE, target.getPos(), 150., true, false)
            caster.issueTargetOrderById(Orders.smart, target)
            caster.setBaseSpeed("charge", SPEED)
            targetMap.put(caster, target)
            runMap.put(caster, true)
            casters.add(caster)
            doPeriodically(INTERVAL, cb -> begin
                vision.destr()
                if runMap.get(caster)
                    vision = createFogModifier(caster.getOwner(), FOG_OF_WAR_VISIBLE, target.getPos(), 150., true, false)
                    if caster.getPos().distanceTo(target.getPos()) <= 150. or not target.isAlive()
                        if target.isAlive()
                            caster.damageTarget(target, damage, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_ENHANCED, WEAPON_TYPE_METAL_HEAVY_BASH)
                        runMap.put(caster, false)
                else
                    caster.removeSpeedBuff("charge")
                    eff.destr()
                    casters.remove(caster)
                    destroy cb
            end)
    end)
    code func = () -> begin
        let u = GetOrderedUnit()
        if casters.has(u) and not GetOrderTarget() == targetMap.get(u)
            runMap.put(u, false)
    end
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, func)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, func)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, func)

function ChannelAbilityPreset.general()
    this
        ..presetBaseOrderID(lvl -> "chainlightning")
        ..presetOption(Option.PHYSICALSPELL, true)
        ..presetFollowThroughTime(lvl -> 0.75)
        ..setAnimationNames("spell,channel")
        ..presetTargetsAllowed(lvl -> "air,enemies,neutral,ground")
        ..tooltipStartListen()
        ..setHotkey("Q")
        ..setName("Charge")
        ..presetTargetTypes(Targettype.UNIT)
        // Stats
        ..addTooltipProperty("Damage", lvl -> DMG[lvl-1])
        ..addTooltipProperty("Move speed", lvl -> SPEED)
        ..presetManaCost(lvl -> MANA)
        ..presetCooldown(lvl -> CD)
        ..presetCastRange(lvl -> RANGE)
        // Audiovisual
        ..presetIcon(Imports.bTNCharge)

@compiletime function gen()
    new ChannelAbilityPreset(CHARGE_NL, 2, true, new AbilityTooltipGenerator("The Zealot concentrate in a target so increase his speed and causing a damage when reaches the target.|nThe spell ends if the Zealot do another action or is stopped."))
        ..setHeroAbility(false)
        ..general()
        // Tooltip
        ..setEditorSuffix("(Not leveling)")
        .tooltipStopListen()
    
    new ChannelAbilityPreset(CHARGE_L, 4, true, new AbilityTooltipGenerator("The Zealot concentrate in a target so increase his speed and causing a damage when reaches the target.|nThe spell ends if the Zealot do another action or is stopped."))
        ..setHeroAbility(true)
        ..setRequiredLevel(1)
        ..general()
        // Tooltip
        ..tooltipStopListen()
        .setEditorSuffix("(Leveling)")
    
    new ChannelAbilityPreset(CHARGE_S, 6, true)
        ..setHeroAbility(false)
        ..general()
        ..presetTooltipNormal(lvl -> "[|cffffcc00F|r] Charge")
        ..setHotkey("F")
        // Stats
        ..presetTooltipNormalExtended(lvl -> begin
            real value
            if lvl < 3
                value = DMG[lvl-1]
            else
                value = DMG[lvl-3]
            return "The Zealot concentrate in a target so increase his speed and causing {0} of damage when reaches the target.|nThe spell ends if the Zealot do another action or is stopped.".format(value.toString())
        end)
        ..setEditorSuffix("(Stealed)")