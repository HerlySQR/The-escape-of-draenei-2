// Make a damage deal from a unit comes from another instead
package DummyDamager

import Functions

import DamageEvent
import UnitIndexer

group dummies = CreateGroup()
unit array sources
attacktype array att
damagetype array dtt

public function unit.dummyDamage(unit dummy, attacktype at, damagetype dt)
    dummies.add(dummy)
    let i = dummy.getIndex()
    sources[i] = this
    att[i] = at
    dtt[i] = dt

init
    DamageEvent.addUnreducedListener(() -> begin
        let source = DamageEvent.getSource()
        if dummies.has(source)
            let target = DamageEvent.getTarget()
            let i = source.getIndex()
            sources[i].damageTarget(target, DamageEvent.getAmount(), att[i], dtt[i])
            DamageEvent.setAmount(0.)
    end)
    onUnitDeindex(() -> begin
        if dummies.has(getIndexingUnit())
            dummies.remove(getIndexingUnit())
            let i = getIndexingUnit().getIndex()
            sources[i] = null
            att[i] = null
            dtt[i] = null
    end)