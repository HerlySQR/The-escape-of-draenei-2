package MyBoard

import ClosureTimers
import Icons

import public Functions
import public PlayerData
import ModeSelection
import HeroType
import ReviveN
import DrAndDeSpawn

public multiboard table = CreateMultiboard()

init
    onModesSelected(() -> startTable())

public function startTable()
    int pl = 0
    for i = 0 to bj_MAX_PLAYERS
        if players[i].isIngame()
            pl++
    
    table..setColumnCount(5)
         ..setRowCount(pl + 3)
         ..setTitle("Statistics")
         ..display(false)
         ..setItemWidth(1, 0, 0.0145)
         ..setItemWidth(2, 0, 0.0650)
         ..setItemValue(0, 0, "0")
         ..setItemValue(1, 0, "")
         ..setItemValue(0, 2, "")
         ..setItemValue(1, 2, colorId[11] + "Drae|r")
         ..setItemValue(2, 2, colorId[11] + " nei|r")
         ..setItemValue(2, 1, "Player")
         ..setItemValue(3, 1, "Kills")
         ..setItemValue(4, 1, "Deaths")
         ..setItemValue(5, 1, "Assists")
    table.getItem(0, 0).setStyle(true, false)
    table.getItem(0, 0).setValueColor(105, 105, 105, 255)
    table.getItem(0, 1).setValueColor(255, 212, 0, 255)
    playersOrder()

int drPlayers
int dePlayers

public function playersOrder()
    for i = 1 to 12
        row[i] = 999
    
    int t = 3
    for i = 1 to 5
        if playerM(i).isIngame()
            row[i] = t
            drPlayers++
            t++
    t++
    for i = 6 to 10
        if playerM(i).isIngame()
            row[i] = t
            dePlayers++
            t++

    int r

    for i = 1 to 10
        r = row[i]
        if r != 999
            table..setItemValueColor(0, r, 255, 255, 255, 255)
                 ..setItemValue(2, r, playerName[i])
                 ..setItemValue(3, r, kills[i].toString())
                 ..setItemValue(4, r, deaths[i].toString())
                 ..setItemValue(5, r, assists[i].toString())
            table.getItem(1, r).setStyle(false, true)
            let g = HeroType.get(hero[i])
            if g == null
                table.setItemIcon(1, r, Icons.bTNSelectHeroOff)
            else
                table.setItemIcon(1, r, HeroType.roots[g])
    
    r = drPlayers + 3
    table.getItem(1, r).setStyle(true, false)
    table..setItemValue(0, r, "")
         ..setItemValue(1, r, colorId[12] + "Dem|r")
         ..setItemValue(2, r, colorId[12] + " ons|r")

// Game time
int seconds = 0
int minutes = 0
int hours = 0

init
    doPeriodically(1, cb -> begin
        seconds++
        if seconds == 60
            seconds = 0
            minutes++
        if minutes == 60
            minutes = 0
            hours++
        table.setTitle("Statistics  | |  " + (hours < 10 ? "0" : "") + hours.toString() + ":" + (minutes < 10 ? "0" : "") + minutes.toString() + ":"  + (seconds < 10 ? "0" : "") + seconds.toString())
        // Triggers or timers to enable
        if reviveNRun
            if seconds == 0 or seconds == 20 or seconds == 40
                reviveNRun = false
                reviveStart()
        if spawnRun
            if seconds == 0 or seconds == 30
                spawnRun = false
                startSpawn()
    end) 
    